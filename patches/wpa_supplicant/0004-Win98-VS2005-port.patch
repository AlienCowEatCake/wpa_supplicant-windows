From 87fb5ee8f6927753027b966fb5fb18623390cf28 Mon Sep 17 00:00:00 2001
From: Peter Zhigalov <peter.zhigalov@gmail.com>
Date: Sat, 18 Feb 2023 22:50:52 +0700
Subject: [PATCH 4/5] Win98/VS2005 port

---
 src/common/sae_pk.c                           |   2 +
 src/common/wpa_ctrl.c                         |   2 +-
 src/crypto/tls_openssl.c                      |  53 +++++
 src/drivers/driver_ndis.c                     |  16 +-
 src/l2_packet/l2_packet_winpcap.c             |  55 ++++-
 src/pae/ieee802_1x_kay.c                      | 102 ++++----
 src/utils/base64.c                            |   2 +
 src/utils/build_config.h                      |   9 +
 src/utils/common.h                            |  29 ++-
 src/utils/edit_simple.c                       |  14 ++
 src/utils/eloop.c                             |   8 +-
 src/utils/includes.h                          |  54 +++++
 src/utils/inet_ntop.h                         | 192 ++++++++++++++++
 src/utils/inet_pton.h                         | 217 ++++++++++++++++++
 src/utils/pcsc_funcs.c                        |  31 +--
 src/utils/trace.h                             |   2 +-
 src/utils/wpa_debug.c                         |  17 ++
 src/utils/wpa_debug.h                         |  12 +
 wpa_supplicant/autoscan_exponential.c         |   8 +-
 wpa_supplicant/autoscan_periodic.c            |   8 +-
 wpa_supplicant/bgscan_learn.c                 |  12 +-
 wpa_supplicant/bgscan_simple.c                |  12 +-
 wpa_supplicant/ctrl_iface.c                   |  16 +-
 wpa_supplicant/ctrl_iface_named_pipe.c        |  52 +++++
 wpa_supplicant/eapol_test.c                   |  13 +-
 wpa_supplicant/main_winsvc.c                  |  88 +++++++
 wpa_supplicant/nmake.mak                      |  71 ++++--
 .../vs2005/eapol_test/eapol_test.vcproj       | 158 ++++++++++---
 .../vs2005/win_if_list/win_if_list.vcproj     |  10 +-
 wpa_supplicant/vs2005/wpa_cli/wpa_cli.vcproj  |  20 +-
 .../wpa_passphrase/wpa_passphrase.vcproj      |  35 +--
 .../wpa_supplicant/wpa_supplicant.vcproj      | 164 ++++++++++---
 wpa_supplicant/vs2005/wpasvc/wpasvc.vcproj    | 216 ++++++++++++-----
 wpa_supplicant/win_if_list.c                  |   2 +-
 wpa_supplicant/wpa_cli.c                      |   4 +-
 wpa_supplicant/wpa_gui-qt4/addinterface.cpp   |   9 +-
 wpa_supplicant/wpa_gui-qt4/icons/ap.png       | Bin 0 -> 189 bytes
 wpa_supplicant/wpa_gui-qt4/icons/group.png    | Bin 0 -> 205 bytes
 .../wpa_gui-qt4/icons/invitation.png          | Bin 0 -> 209 bytes
 wpa_supplicant/wpa_gui-qt4/icons/laptop.png   | Bin 0 -> 248 bytes
 wpa_supplicant/wpa_gui-qt4/icons/status/0.png | Bin 0 -> 129 bytes
 wpa_supplicant/wpa_gui-qt4/icons/status/1.png | Bin 0 -> 130 bytes
 wpa_supplicant/wpa_gui-qt4/icons/status/2.png | Bin 0 -> 130 bytes
 wpa_supplicant/wpa_gui-qt4/icons/status/3.png | Bin 0 -> 130 bytes
 wpa_supplicant/wpa_gui-qt4/icons/status/4.png | Bin 0 -> 127 bytes
 wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.ico  | Bin 0 -> 34494 bytes
 wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.png  | Bin 0 -> 161 bytes
 wpa_supplicant/wpa_gui-qt4/icons_png.qrc      |  10 +-
 wpa_supplicant/wpa_gui-qt4/icons_status.qrc   |  12 +
 wpa_supplicant/wpa_gui-qt4/main.cpp           |  12 +-
 wpa_supplicant/wpa_gui-qt4/networkconfig.cpp  |   5 +
 wpa_supplicant/wpa_gui-qt4/peers.cpp          |   5 +
 wpa_supplicant/wpa_gui-qt4/scanresults.cpp    |   5 +
 wpa_supplicant/wpa_gui-qt4/wpa_gui.pro        |  17 +-
 wpa_supplicant/wpa_gui-qt4/wpa_gui.rc         |   1 +
 wpa_supplicant/wpa_gui-qt4/wpagui.cpp         | 117 ++++++++--
 wpa_supplicant/wpa_gui-qt4/wpagui.h           |   8 +
 wpa_supplicant/wpa_supplicant.c               |  58 +++++
 58 files changed, 1660 insertions(+), 305 deletions(-)
 create mode 100644 src/utils/inet_ntop.h
 create mode 100644 src/utils/inet_pton.h
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/ap.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/group.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/invitation.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/laptop.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/status/0.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/status/1.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/status/2.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/status/3.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/status/4.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.ico
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.png
 create mode 100644 wpa_supplicant/wpa_gui-qt4/icons_status.qrc
 create mode 100644 wpa_supplicant/wpa_gui-qt4/wpa_gui.rc

diff --git a/src/common/sae_pk.c b/src/common/sae_pk.c
index df79e5f..fcebf67 100644
--- a/src/common/sae_pk.c
+++ b/src/common/sae_pk.c
@@ -7,7 +7,9 @@
  */
 
 #include "utils/includes.h"
+#if !defined(_MSC_VER) || (_MSC_VER >= 1600)
 #include <stdint.h>
+#endif
 
 #include "utils/common.h"
 #include "utils/base64.h"
diff --git a/src/common/wpa_ctrl.c b/src/common/wpa_ctrl.c
index 40a9795..c593082 100644
--- a/src/common/wpa_ctrl.c
+++ b/src/common/wpa_ctrl.c
@@ -458,7 +458,7 @@ struct wpa_ctrl * wpa_ctrl_open(const char *ctrl_path)
 char * wpa_ctrl_get_remote_ifname(struct wpa_ctrl *ctrl)
 {
 #define WPA_CTRL_MAX_PS_NAME 100
-	static char ps[WPA_CTRL_MAX_PS_NAME] = {};
+	static char ps[WPA_CTRL_MAX_PS_NAME] = {'\0'};
 	os_snprintf(ps, WPA_CTRL_MAX_PS_NAME, "%s/%s",
 		    ctrl->remote_ip, ctrl->remote_ifname);
 	return ps;
diff --git a/src/crypto/tls_openssl.c b/src/crypto/tls_openssl.c
index ad3aa1a..23e0059 100644
--- a/src/crypto/tls_openssl.c
+++ b/src/crypto/tls_openssl.c
@@ -365,6 +365,10 @@ static X509_STORE * tls_crl_cert_reload(const char *ca_cert, int check_crl)
 
 #endif /* __MINGW32_VERSION */
 
+#ifndef RSA_F_RSA_EAY_PRIVATE_ENCRYPT
+#define RSA_F_RSA_EAY_PRIVATE_ENCRYPT RSA_F_RSA_OSSL_PRIVATE_ENCRYPT
+#endif
+
 
 struct cryptoapi_rsa_data {
 	const CERT_CONTEXT *cert;
@@ -400,8 +404,14 @@ static int cryptoapi_rsa_pub_dec(int flen, const unsigned char *from,
 static int cryptoapi_rsa_priv_enc(int flen, const unsigned char *from,
 				  unsigned char *to, RSA *rsa, int padding)
 {
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	struct cryptoapi_rsa_data *priv =
 		(struct cryptoapi_rsa_data *) rsa->meth->app_data;
+#else
+	const RSA_METHOD *meth = RSA_get_method(rsa);
+	struct cryptoapi_rsa_data *priv =
+		(struct cryptoapi_rsa_data *) RSA_meth_get0_app_data(meth);
+#endif
 	HCRYPTHASH hash;
 	DWORD hash_size, len, i;
 	unsigned char *buf = NULL;
@@ -498,9 +508,17 @@ static void cryptoapi_free_data(struct cryptoapi_rsa_data *priv)
 
 static int cryptoapi_finish(RSA *rsa)
 {
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	cryptoapi_free_data((struct cryptoapi_rsa_data *) rsa->meth->app_data);
 	os_free((void *) rsa->meth);
 	rsa->meth = NULL;
+#else
+	const RSA_METHOD *meth = RSA_get_method(rsa);
+	struct cryptoapi_rsa_data *priv =
+		(struct cryptoapi_rsa_data *) RSA_meth_get0_app_data(meth);
+	cryptoapi_free_data(priv);
+	RSA_meth_set0_app_data(meth, NULL);
+#endif
 	return 1;
 }
 
@@ -557,6 +575,9 @@ static int tls_cryptoapi_cert(SSL *ssl, const char *name)
 	RSA *rsa = NULL, *pub_rsa;
 	struct cryptoapi_rsa_data *priv;
 	RSA_METHOD *rsa_meth;
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+	const BIGNUM *n = NULL, *e = NULL, *d = NULL;
+#endif
 
 	if (name == NULL ||
 	    (strncmp(name, "cert://", 7) != 0 &&
@@ -564,12 +585,21 @@ static int tls_cryptoapi_cert(SSL *ssl, const char *name)
 		return -1;
 
 	priv = os_zalloc(sizeof(*priv));
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	rsa_meth = os_zalloc(sizeof(*rsa_meth));
+#else
+	rsa_meth = RSA_meth_new("Microsoft CryptoAPI RSA Method", RSA_METHOD_FLAG_NO_CHECK);
+#endif
 	if (priv == NULL || rsa_meth == NULL) {
 		wpa_printf(MSG_WARNING, "CryptoAPI: Failed to allocate memory "
 			   "for CryptoAPI RSA method");
 		os_free(priv);
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 		os_free(rsa_meth);
+#else
+		if (rsa_meth != NULL)
+			RSA_meth_free(rsa_meth);
+#endif
 		return -1;
 	}
 
@@ -603,6 +633,7 @@ static int tls_cryptoapi_cert(SSL *ssl, const char *name)
 		goto err;
 	}
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	rsa_meth->name = "Microsoft CryptoAPI RSA Method";
 	rsa_meth->rsa_pub_enc = cryptoapi_rsa_pub_enc;
 	rsa_meth->rsa_pub_dec = cryptoapi_rsa_pub_dec;
@@ -611,6 +642,14 @@ static int tls_cryptoapi_cert(SSL *ssl, const char *name)
 	rsa_meth->finish = cryptoapi_finish;
 	rsa_meth->flags = RSA_METHOD_FLAG_NO_CHECK;
 	rsa_meth->app_data = (char *) priv;
+#else
+	RSA_meth_set_pub_enc(rsa_meth, cryptoapi_rsa_pub_enc);
+	RSA_meth_set_pub_dec(rsa_meth, cryptoapi_rsa_pub_dec);
+	RSA_meth_set_priv_enc(rsa_meth, cryptoapi_rsa_priv_enc);
+	RSA_meth_set_priv_dec(rsa_meth, cryptoapi_rsa_priv_dec);
+	RSA_meth_set_finish(rsa_meth, cryptoapi_finish);
+	RSA_meth_set0_app_data(rsa_meth, (void *) priv);
+#endif
 
 	rsa = RSA_new();
 	if (rsa == NULL) {
@@ -624,12 +663,22 @@ static int tls_cryptoapi_cert(SSL *ssl, const char *name)
 		rsa = NULL;
 		goto err;
 	}
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	pub_rsa = cert->cert_info->key->pkey->pkey.rsa;
+#else
+	pub_rsa = EVP_PKEY_get0_RSA(X509_get0_pubkey(cert));
+#endif
 	X509_free(cert);
 	cert = NULL;
 
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 	rsa->n = BN_dup(pub_rsa->n);
 	rsa->e = BN_dup(pub_rsa->e);
+#else
+	RSA_get0_key(pub_rsa, &n, &e, &d);
+	if (!RSA_set0_key(rsa, BN_dup(n), BN_dup(e), BN_dup(d)))
+		goto err;
+#endif
 	if (!RSA_set_method(rsa, rsa_meth))
 		goto err;
 
@@ -645,7 +694,11 @@ err:
 	if (rsa)
 		RSA_free(rsa);
 	else {
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
 		os_free(rsa_meth);
+#else
+		RSA_meth_free(rsa_meth);
+#endif
 		cryptoapi_free_data(priv);
 	}
 	return -1;
diff --git a/src/drivers/driver_ndis.c b/src/drivers/driver_ndis.c
index b32e009..da0f28b 100644
--- a/src/drivers/driver_ndis.c
+++ b/src/drivers/driver_ndis.c
@@ -1495,6 +1495,11 @@ static void wpa_driver_ndis_poll_timeout(void *eloop_ctx, void *timeout_ctx)
 #ifndef _WIN32_WCE
 	poll = 1;
 #endif /* _WIN32_WCE */
+#else /* CONFIG_NDIS_EVENTS_INTEGRATED */
+#ifndef _WIN32_WCE
+	if (!drv->events)
+		poll = 1;
+#endif /* _WIN32_WCE */
 #endif /* CONFIG_NDIS_EVENTS_INTEGRATED */
 
 	if (poll) {
@@ -2769,6 +2774,9 @@ static int wpa_driver_ndis_adapter_open(struct wpa_driver_ndis_data *drv)
 	char ifname[128];
 	os_snprintf(ifname, sizeof(ifname), "\\Device\\NPF_%s", drv->ifname);
 	drv->adapter = PacketOpenAdapter(ifname);
+	/* Win98 has ifnames without prefixes */
+	if (drv->adapter == NULL)
+		drv->adapter = PacketOpenAdapter(drv->ifname);
 	if (drv->adapter == NULL) {
 		wpa_printf(MSG_DEBUG, "NDIS: PacketOpenAdapter failed for "
 			   "'%s'", ifname);
@@ -2877,11 +2885,15 @@ static void * wpa_driver_ndis_init(void *ctx, const char *ifname)
 	drv->events = ndis_events_init(&drv->events_pipe, &drv->event_avail,
 				       drv->ifname, drv->adapter_desc);
 	if (drv->events == NULL) {
+		/* This is non-fatal error, ndis_events_init not work on Win98 */
+		/*
 		wpa_driver_ndis_deinit(drv);
 		return NULL;
+		*/
+	} else {
+		eloop_register_event(drv->event_avail, sizeof(drv->event_avail),
+				     wpa_driver_ndis_event_pipe_cb, drv, NULL);
 	}
-	eloop_register_event(drv->event_avail, sizeof(drv->event_avail),
-			     wpa_driver_ndis_event_pipe_cb, drv, NULL);
 #endif /* CONFIG_NDIS_EVENTS_INTEGRATED */
 
 #ifdef _WIN32_WCE
diff --git a/src/l2_packet/l2_packet_winpcap.c b/src/l2_packet/l2_packet_winpcap.c
index 3452051..e60b4d1 100644
--- a/src/l2_packet/l2_packet_winpcap.c
+++ b/src/l2_packet/l2_packet_winpcap.c
@@ -27,6 +27,9 @@
  */
 
 #include "includes.h"
+#ifdef CONFIG_L2_IP_IPHLPAPI
+#include <iphlpapi.h>
+#endif /* CONFIG_L2_IP_IPHLPAPI */
 #include <pcap.h>
 
 #include "common.h"
@@ -220,8 +223,12 @@ struct l2_packet_data * l2_packet_init(
 		os_memcpy(l2->own_addr, own_addr, ETH_ALEN);
 
 	if (l2_packet_init_libpcap(l2, protocol)) {
-		os_free(l2);
-		return NULL;
+		os_snprintf(l2->ifname, sizeof(l2->ifname), "%s", ifname);
+		/* Win98 has ifnames without prefixes */
+		if (l2_packet_init_libpcap(l2, protocol)) {
+			os_free(l2);
+			return NULL;
+		}
 	}
 
 	if (!rx_callback)
@@ -315,6 +322,44 @@ int l2_packet_get_ip_addr(struct l2_packet_data *l2, char *buf, size_t len)
 	int found = 0;
 	char err[PCAP_ERRBUF_SIZE + 1];
 
+#ifdef CONFIG_L2_IP_IPHLPAPI
+	/*
+	 * On Win98 pcap_findalldevs returns devices with "0.0.0.0"
+	 * instead of a real IP address. In addition to the absence of
+	 * a result, call to this function leads to a system freeze for
+	 * a second. So we will try an alternative API.
+	 */
+	ULONG info_len = sizeof(IP_ADAPTER_INFO);
+	PIP_ADAPTER_INFO info = os_malloc(info_len);
+
+	if (GetAdaptersInfo(info, &info_len) == ERROR_BUFFER_OVERFLOW) {
+		os_free(info);
+		info = os_malloc(info_len);
+	}
+
+	if (GetAdaptersInfo(info, &info_len) == NO_ERROR) {
+		PIP_ADAPTER_INFO adapter;
+		for (adapter = info; adapter; adapter = adapter->Next) {
+			if (os_memcmp(adapter->Address, l2->own_addr, sizeof(l2->own_addr)) != 0)
+				continue;
+
+			if (adapter->CurrentIpAddress)
+				os_strlcpy(buf, adapter->CurrentIpAddress->IpAddress.String, len);
+			else
+				os_strlcpy(buf, adapter->IpAddressList.IpAddress.String, len);
+
+			if (os_strncmp(buf, "0.0.0.0", len) != 0)
+				found = 1;
+			break;
+		}
+	}
+
+	os_free(info);
+
+	if (found)
+		return 0;
+#endif /* CONFIG_L2_IP_IPHLPAPI */
+
 	if (pcap_findalldevs(&devs, err) < 0) {
 		wpa_printf(MSG_DEBUG, "pcap_findalldevs: %s\n", err);
 		return -1;
@@ -348,3 +393,9 @@ void l2_packet_notify_auth_start(struct l2_packet_data *l2)
 	if (l2)
 		SetEvent(l2->rx_notify);
 }
+
+int l2_packet_set_packet_filter(struct l2_packet_data *l2,
+				enum l2_packet_filter_type type)
+{
+	return -1;
+}
diff --git a/src/pae/ieee802_1x_kay.c b/src/pae/ieee802_1x_kay.c
index 657de93..3709546 100644
--- a/src/pae/ieee802_1x_kay.c
+++ b/src/pae/ieee802_1x_kay.c
@@ -42,17 +42,17 @@ static u8 mka_algo_agility[4] = MKA_ALGO_AGILITY_2009;
 static struct macsec_ciphersuite cipher_suite_tbl[] = {
 	/* GCM-AES-128 */
 	{
-		.id = CS_ID_GCM_AES_128,
-		.name = CS_NAME_GCM_AES_128,
-		.capable = MACSEC_CAP_INTEG_AND_CONF_0_30_50,
-		.sak_len = DEFAULT_SA_KEY_LEN,
+		CS_ID_GCM_AES_128,
+		CS_NAME_GCM_AES_128,
+		MACSEC_CAP_INTEG_AND_CONF_0_30_50,
+		DEFAULT_SA_KEY_LEN,
 	},
 	/* GCM-AES-256 */
 	{
-		.id = CS_ID_GCM_AES_256,
-		.name = CS_NAME_GCM_AES_256,
-		.capable = MACSEC_CAP_INTEG_AND_CONF_0_30_50,
-		.sak_len = 32,
+		CS_ID_GCM_AES_256,
+		CS_NAME_GCM_AES_256,
+		MACSEC_CAP_INTEG_AND_CONF_0_30_50,
+		32,
 	},
 };
 #define CS_TABLE_SIZE (ARRAY_SIZE(cipher_suite_tbl))
@@ -60,15 +60,15 @@ static struct macsec_ciphersuite cipher_suite_tbl[] = {
 
 static struct mka_alg mka_alg_tbl[] = {
 	{
-		.parameter = MKA_ALGO_AGILITY_2009,
+		MKA_ALGO_AGILITY_2009,
 
-		.icv_len = DEFAULT_ICV_LEN,
+		DEFAULT_ICV_LEN,
 
-		.cak_trfm = ieee802_1x_cak_aes_cmac,
-		.ckn_trfm = ieee802_1x_ckn_aes_cmac,
-		.kek_trfm = ieee802_1x_kek_aes_cmac,
-		.ick_trfm = ieee802_1x_ick_aes_cmac,
-		.icv_hash = ieee802_1x_icv_aes_cmac,
+		ieee802_1x_cak_aes_cmac,
+		ieee802_1x_ckn_aes_cmac,
+		ieee802_1x_kek_aes_cmac,
+		ieee802_1x_ick_aes_cmac,
+		ieee802_1x_icv_aes_cmac,
 	},
 };
 #define MKA_ALG_TABLE_SIZE (ARRAY_SIZE(mka_alg_tbl))
@@ -2009,74 +2009,74 @@ struct mka_param_body_handler {
 static struct mka_param_body_handler mka_body_handler[] = {
 	/* Basic parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_basic_body,
-		.body_rx      = NULL,
-		.body_length  = ieee802_1x_mka_basic_body_length,
-		.body_present = ieee802_1x_mka_basic_body_present
+		ieee802_1x_mka_encode_basic_body,
+		NULL,
+		ieee802_1x_mka_basic_body_length,
+		ieee802_1x_mka_basic_body_present
 	},
 
 	/* Live Peer List parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_live_peer_body,
-		.body_rx      = ieee802_1x_mka_decode_live_peer_body,
-		.body_length  = ieee802_1x_mka_get_live_peer_length,
-		.body_present = ieee802_1x_mka_live_peer_body_present
+		ieee802_1x_mka_encode_live_peer_body,
+		ieee802_1x_mka_decode_live_peer_body,
+		ieee802_1x_mka_get_live_peer_length,
+		ieee802_1x_mka_live_peer_body_present
 	},
 
 	/* Potential Peer List parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_potential_peer_body,
-		.body_rx      = ieee802_1x_mka_decode_potential_peer_body,
-		.body_length  = ieee802_1x_mka_get_potential_peer_length,
-		.body_present = ieee802_1x_mka_potential_peer_body_present
+		ieee802_1x_mka_encode_potential_peer_body,
+		ieee802_1x_mka_decode_potential_peer_body,
+		ieee802_1x_mka_get_potential_peer_length,
+		ieee802_1x_mka_potential_peer_body_present
 	},
 
 	/* MACsec SAK Use parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_sak_use_body,
-		.body_rx      = ieee802_1x_mka_decode_sak_use_body,
-		.body_length  = ieee802_1x_mka_get_sak_use_length,
-		.body_present = ieee802_1x_mka_sak_use_body_present
+		ieee802_1x_mka_encode_sak_use_body,
+		ieee802_1x_mka_decode_sak_use_body,
+		ieee802_1x_mka_get_sak_use_length,
+		ieee802_1x_mka_sak_use_body_present
 	},
 
 	/* Distributed SAK parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_dist_sak_body,
-		.body_rx      = ieee802_1x_mka_decode_dist_sak_body,
-		.body_length  = ieee802_1x_mka_get_dist_sak_length,
-		.body_present = ieee802_1x_mka_dist_sak_body_present
+		ieee802_1x_mka_encode_dist_sak_body,
+		ieee802_1x_mka_decode_dist_sak_body,
+		ieee802_1x_mka_get_dist_sak_length,
+		ieee802_1x_mka_dist_sak_body_present
 	},
 
 	/* Distribute CAK parameter set */
 	{
-		.body_tx      = NULL,
-		.body_rx      = ieee802_1x_mka_decode_dist_cak_body,
-		.body_length  = NULL,
-		.body_present = NULL
+		NULL,
+		ieee802_1x_mka_decode_dist_cak_body,
+		NULL,
+		NULL
 	},
 
 	/* KMD parameter set */
 	{
-		.body_tx      = NULL,
-		.body_rx      = ieee802_1x_mka_decode_kmd_body,
-		.body_length  = NULL,
-		.body_present = NULL
+		NULL,
+		ieee802_1x_mka_decode_kmd_body,
+		NULL,
+		NULL
 	},
 
 	/* Announcement parameter set */
 	{
-		.body_tx      = NULL,
-		.body_rx      = ieee802_1x_mka_decode_announce_body,
-		.body_length  = NULL,
-		.body_present = NULL
+		NULL,
+		ieee802_1x_mka_decode_announce_body,
+		NULL,
+		NULL
 	},
 
 	/* ICV Indicator parameter set */
 	{
-		.body_tx      = ieee802_1x_mka_encode_icv_body,
-		.body_rx      = NULL,
-		.body_length  = ieee802_1x_mka_get_icv_length,
-		.body_present = ieee802_1x_mka_icv_body_present
+		ieee802_1x_mka_encode_icv_body,
+		NULL,
+		ieee802_1x_mka_get_icv_length,
+		ieee802_1x_mka_icv_body_present
 	},
 };
 
diff --git a/src/utils/base64.c b/src/utils/base64.c
index 0d121c1..44f76c9 100644
--- a/src/utils/base64.c
+++ b/src/utils/base64.c
@@ -7,7 +7,9 @@
  */
 
 #include "includes.h"
+#if !defined(_MSC_VER) || (_MSC_VER >= 1600)
 #include <stdint.h>
+#endif
 
 #include "utils/common.h"
 #include "os.h"
diff --git a/src/utils/build_config.h b/src/utils/build_config.h
index c6f4e43..46d9f82 100644
--- a/src/utils/build_config.h
+++ b/src/utils/build_config.h
@@ -36,8 +36,17 @@
 #define EAP_TTLS
 #define EAP_GTC
 #define EAP_OTP
+#define EAP_SIM
 #define EAP_LEAP
+#define EAP_PSK
+#define EAP_AKA
+#define EAP_FAST
+#define EAP_PAX
 #define EAP_TNC
+#define EAP_TLS_OPENSSL
+#define CONFIG_SHA256
+#define CONFIG_NO_SOCKLEN_T_TYPEDEF
+#define TLS_DEFAULT_CIPHERS "DEFAULT:!EXP:!LOW"
 #define _CRT_SECURE_NO_DEPRECATE
 
 #ifdef USE_INTERNAL_CRYPTO
diff --git a/src/utils/common.h b/src/utils/common.h
index 45f72bb..530c7d7 100644
--- a/src/utils/common.h
+++ b/src/utils/common.h
@@ -9,6 +9,10 @@
 #ifndef COMMON_H
 #define COMMON_H
 
+#ifdef _MSC_VER
+#define inline __inline
+#endif
+
 #include "os.h"
 
 #if defined(__linux__) || defined(__GLIBC__)
@@ -63,7 +67,7 @@ static inline unsigned int bswap_32(unsigned int v)
 #endif /* __rtems__ */
 
 #ifdef CONFIG_NATIVE_WINDOWS
-#include <winsock.h>
+#include <winsock2.h>
 
 typedef int socklen_t;
 
@@ -74,10 +78,13 @@ typedef int socklen_t;
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 #ifdef _MSC_VER
-#define inline __inline
-
+#include <io.h>
+#if _MSC_VER < 1900
+#undef snprintf
+#define snprintf _snprintf
 #undef vsnprintf
 #define vsnprintf _vsnprintf
+#endif
 #undef close
 #define close closesocket
 #endif /* _MSC_VER */
@@ -142,6 +149,15 @@ static inline unsigned int wpa_swap_32(unsigned int v)
 		((v & 0xff0000) >> 8) | (v >> 24);
 }
 
+static inline u64 wpa_swap_64(u64 v)
+{
+	unsigned int hi = (unsigned int)(v >> 32);
+	unsigned int lo = (unsigned int)(v);
+	hi = wpa_swap_32(hi);
+	lo = wpa_swap_32(lo);
+	return (((u64)(lo)) << 32) | hi;
+}
+
 #define le_to_host16(n) (n)
 #define host_to_le16(n) (n)
 #define be_to_host16(n) wpa_swap_16(n)
@@ -150,7 +166,10 @@ static inline unsigned int wpa_swap_32(unsigned int v)
 #define host_to_le32(n) (n)
 #define be_to_host32(n) wpa_swap_32(n)
 #define host_to_be32(n) wpa_swap_32(n)
+#define le_to_host64(n) (n)
 #define host_to_le64(n) (n)
+#define be_to_host64(n) wpa_swap_64(n)
+#define host_to_be64(n) wpa_swap_64(n)
 
 #define WPA_BYTE_SWAP_DEFINED
 
@@ -390,7 +409,11 @@ typedef int socklen_t;
 #endif
 
 #ifndef __func__
+#ifndef __FUNCTION__
 #define __func__ "__func__ not defined"
+#else
+#define __func__ __FUNCTION__
+#endif
 #endif
 
 #ifndef bswap_16
diff --git a/src/utils/edit_simple.c b/src/utils/edit_simple.c
index 2ffd1a2..036e5a2 100644
--- a/src/utils/edit_simple.c
+++ b/src/utils/edit_simple.c
@@ -60,6 +60,12 @@ static void edit_read_char(int sock, void *eloop_ctx, void *sock_ctx)
 	}
 }
 
+#ifdef CONFIG_NATIVE_WINDOWS
+static void edit_read_char_event_cb(void *eloop_ctx, void *sock_ctx)
+{
+	edit_read_char(STDIN_FILENO, eloop_ctx, sock_ctx);
+}
+#endif
 
 int edit_init(void (*cmd_cb)(void *ctx, char *cmd),
 	      void (*eof_cb)(void *ctx),
@@ -69,7 +75,11 @@ int edit_init(void (*cmd_cb)(void *ctx, char *cmd),
 	edit_cb_ctx = ctx;
 	edit_cmd_cb = cmd_cb;
 	edit_eof_cb = eof_cb;
+#ifdef CONFIG_NATIVE_WINDOWS
+	eloop_register_event(GetStdHandle(STD_INPUT_HANDLE), sizeof(HANDLE), edit_read_char_event_cb, NULL, NULL);
+#else
 	eloop_register_read_sock(STDIN_FILENO, edit_read_char, NULL, NULL);
+#endif
 	ps2 = ps;
 
 	printf("%s> ", ps2 ? ps2 : "");
@@ -82,7 +92,11 @@ int edit_init(void (*cmd_cb)(void *ctx, char *cmd),
 void edit_deinit(const char *history_file,
 		 int (*filter_cb)(void *ctx, const char *cmd))
 {
+#ifdef CONFIG_NATIVE_WINDOWS
+	eloop_unregister_event(GetStdHandle(STD_INPUT_HANDLE), sizeof(HANDLE));
+#else
 	eloop_unregister_read_sock(STDIN_FILENO);
+#endif
 }
 
 
diff --git a/src/utils/eloop.c b/src/utils/eloop.c
index 00b0bef..9ef9961 100644
--- a/src/utils/eloop.c
+++ b/src/utils/eloop.c
@@ -44,8 +44,8 @@ struct eloop_sock {
 	void *eloop_data;
 	void *user_data;
 	eloop_sock_handler handler;
-	WPA_TRACE_REF(eloop);
-	WPA_TRACE_REF(user);
+	WPA_TRACE_REF(eloop)
+	WPA_TRACE_REF(user)
 	WPA_TRACE_INFO
 };
 
@@ -55,8 +55,8 @@ struct eloop_timeout {
 	void *eloop_data;
 	void *user_data;
 	eloop_timeout_handler handler;
-	WPA_TRACE_REF(eloop);
-	WPA_TRACE_REF(user);
+	WPA_TRACE_REF(eloop)
+	WPA_TRACE_REF(user)
 	WPA_TRACE_INFO
 };
 
diff --git a/src/utils/includes.h b/src/utils/includes.h
index 741fc9c..d23f5dd 100644
--- a/src/utils/includes.h
+++ b/src/utils/includes.h
@@ -18,7 +18,15 @@
 
 #include <stdlib.h>
 #include <stddef.h>
+#if defined(_MSC_VER) && (_MSC_VER < 1800)
+#ifndef __cplusplus
+typedef int bool;
+#define true 1
+#define false 0
+#endif
+#else
 #include <stdbool.h>
+#endif
 #include <stdio.h>
 #include <stdarg.h>
 #include <string.h>
@@ -41,6 +49,52 @@
 #include <sys/uio.h>
 #include <sys/time.h>
 #endif /* __vxworks */
+#else
+#include <winsock2.h>
+#include <ws2tcpip.h>
+#ifndef __MINGW32_VERSION
+#include <wspiapi.h>
+#endif
+#include <windows.h>
+
+#include "common.h"
+
+#if defined(_MSC_VER) && (_MSC_VER < 1800)
+static int isblank_impl(int c) { return (c==' ' || c=='\t'); }
+#define isblank isblank_impl
+#endif
+
+#if defined(_MSC_VER) && !defined(STDIN_FILENO)
+#define STDIN_FILENO _fileno(stdin)
+#endif
+
+#include <errno.h>
+#ifndef EOPNOTSUPP
+#define EOPNOTSUPP ENOSYS
+#endif
+#ifndef EAFNOSUPPORT
+#define EAFNOSUPPORT ENOSYS
+#endif
+#ifndef EWOULDBLOCK
+#define EWOULDBLOCK EAGAIN
+#endif
+
+#include <assert.h>
+#include "inet_pton.h"
+#include "inet_ntop.h"
+#define inet_pton inet_pton_impl
+#define inet_ntop inet_ntop_impl
+
+#if defined(_MSC_VER) && !defined(S_IRUSR)
+#define S_IRUSR _S_IREAD
+#endif
+#if defined(_MSC_VER) && !defined(S_IWUSR)
+#define S_IWUSR _S_IWRITE
+#endif
+#if defined(_WIN32) && !defined(S_IRGRP)
+#define S_IRGRP _S_IREAD
+#endif
+
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 #endif /* INCLUDES_H */
diff --git a/src/utils/inet_ntop.h b/src/utils/inet_ntop.h
new file mode 100644
index 0000000..1ac3d2a
--- /dev/null
+++ b/src/utils/inet_ntop.h
@@ -0,0 +1,192 @@
+/*
+ * Copyright (C) 1996-2001  Internet Software Consortium.
+ *
+ * Permission to use, copy, modify, and distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
+ * DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
+ * INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
+ * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#ifndef INET_NTOP_H
+#define INET_NTOP_H
+
+#ifndef NS_INT16SZ
+#define NS_INT16SZ   2
+#endif
+#ifndef NS_IN6ADDRSZ
+#define NS_IN6ADDRSZ    16
+#endif
+
+/*
+ * WARNING: Don't even consider trying to compile this on a system where
+ * sizeof(int) < 4.  sizeof(int) > 4 is fine; all the world's not a VAX.
+ */
+
+static const char *inet_ntop4(const unsigned char *src, char *dst,
+			      size_t size);
+
+#ifdef AF_INET6
+static const char *inet_ntop6(const unsigned char *src, char *dst,
+			      size_t size);
+#endif
+
+/* char *
+ * isc_net_ntop(af, src, dst, size)
+ *	convert a network format address to presentation format.
+ * return:
+ *	pointer to presentation format address (`dst'), or NULL (see errno).
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static const char *
+inet_ntop_impl(int af, const void *src, char *dst, size_t size)
+{
+	switch (af) {
+	case AF_INET:
+		return (inet_ntop4((const unsigned char *)src, dst, size));
+#ifdef AF_INET6
+	case AF_INET6:
+		return (inet_ntop6((const unsigned char *)src, dst, size));
+#endif
+	default:
+		errno = EAFNOSUPPORT;
+		return (NULL);
+	}
+	/* NOTREACHED */
+}
+
+/* const char *
+ * inet_ntop4(src, dst, size)
+ *	format an IPv4 address
+ * return:
+ *	`dst' (as a const)
+ * notes:
+ *	(1) uses no statics
+ *	(2) takes a unsigned char* not an in_addr as input
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static const char *
+inet_ntop4(const unsigned char *src, char *dst, size_t size)
+{
+	static const char *fmt = "%u.%u.%u.%u";
+	char tmp[sizeof "255.255.255.255"];
+	size_t len;
+
+	len = snprintf(tmp, sizeof tmp, fmt, src[0], src[1], src[2], src[3]);
+	if (len >= size) {
+		errno = ENOSPC;
+		return (NULL);
+	}
+	memcpy(dst, tmp, len + 1);
+
+	return (dst);
+}
+
+/* const char *
+ * isc_inet_ntop6(src, dst, size)
+ *	convert IPv6 binary address into presentation (printable) format
+ * author:
+ *	Paul Vixie, 1996.
+ */
+#ifdef AF_INET6
+static const char *
+inet_ntop6(const unsigned char *src, char *dst, size_t size)
+{
+	/*
+	 * Note that int32_t and int16_t need only be "at least" large enough
+	 * to contain a value of the specified size.  On some systems, like
+	 * Crays, there is no such thing as an integer variable with 16 bits.
+	 * Keep this in mind if you think this function should have been coded
+	 * to use pointer overlays.  All the world's not a VAX.
+	 */
+	char tmp[sizeof "ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"], *tp;
+	struct { int base, len; } best, cur;
+	unsigned int words[NS_IN6ADDRSZ / NS_INT16SZ];
+	int i, inc;
+
+	/*
+	 * Preprocess:
+	 *	Copy the input (bytewise) array into a wordwise array.
+	 *	Find the longest run of 0x00's in src[] for :: shorthanding.
+	 */
+	memset(words, '\0', sizeof words);
+	for (i = 0; i < NS_IN6ADDRSZ; i++)
+		words[i / 2] |= (src[i] << ((1 - (i % 2)) << 3));
+	best.base = -1;
+	cur.base = -1;
+	for (i = 0; i < (NS_IN6ADDRSZ / NS_INT16SZ); i++) {
+		if (words[i] == 0) {
+			if (cur.base == -1)
+				cur.base = i, cur.len = 1;
+			else
+				cur.len++;
+		} else {
+			if (cur.base != -1) {
+				if (best.base == -1 || cur.len > best.len)
+					best = cur;
+				cur.base = -1;
+			}
+		}
+	}
+	if (cur.base != -1) {
+		if (best.base == -1 || cur.len > best.len)
+			best = cur;
+	}
+	if (best.base != -1 && best.len < 2)
+		best.base = -1;
+
+	/*
+	 * Format the result.
+	 */
+	tp = tmp;
+	for (i = 0; i < (NS_IN6ADDRSZ / NS_INT16SZ); i++) {
+		/* Are we inside the best run of 0x00's? */
+		if (best.base != -1 && i >= best.base &&
+		    i < (best.base + best.len)) {
+			if (i == best.base)
+				*tp++ = ':';
+			continue;
+		}
+		/* Are we following an initial run of 0x00s or any real hex? */
+		if (i != 0)
+			*tp++ = ':';
+		/* Is this address an encapsulated IPv4? */
+		if (i == 6 && best.base == 0 &&
+		    (best.len == 6 || (best.len == 5 && words[5] == 0xffff))) {
+			if (!inet_ntop4(src+12, tp, sizeof tmp - (tp - tmp)))
+				return (NULL);
+			tp += strlen(tp);
+			break;
+		}
+		inc = snprintf(tp, 5, "%x", words[i]);
+		assert(inc < 5);
+		tp += inc;
+	}
+	/* Was it a trailing run of 0x00's? */
+	if (best.base != -1 && (best.base + best.len) ==
+	    (NS_IN6ADDRSZ / NS_INT16SZ))
+		*tp++ = ':';
+	*tp++ = '\0';
+
+	/*
+	 * Check for overflow, copy, and we're done.
+	 */
+	if ((size_t)(tp - tmp) > size) {
+		errno = ENOSPC;
+		return (NULL);
+	}
+	memcpy(dst, tmp, tp - tmp);
+	return (dst);
+}
+#endif /* AF_INET6 */
+
+#endif /* INET_NTOP_H */
diff --git a/src/utils/inet_pton.h b/src/utils/inet_pton.h
new file mode 100644
index 0000000..cf1a907
--- /dev/null
+++ b/src/utils/inet_pton.h
@@ -0,0 +1,217 @@
+/*
+ * Copyright (C) 1996-2001  Internet Software Consortium.
+ *
+ * Permission to use, copy, modify, and distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
+ * DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
+ * INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
+ * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
+ * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
+ * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
+ * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#ifndef INET_PTON_H
+#define INET_PTON_H
+
+#ifndef NS_INT16SZ
+#define NS_INT16SZ	 2
+#endif
+#ifndef NS_INADDRSZ
+#define NS_INADDRSZ	 4
+#endif
+#ifndef NS_IN6ADDRSZ
+#define NS_IN6ADDRSZ	16
+#endif
+
+/*
+ * WARNING: Don't even consider trying to compile this on a system where
+ * sizeof(int) < 4.  sizeof(int) > 4 is fine; all the world's not a VAX.
+ */
+
+static int inet_pton4(const char *src, unsigned char *dst);
+#ifdef AF_INET6
+static int inet_pton6(const char *src, unsigned char *dst);
+#endif
+
+/* int
+ * inet_pton(af, src, dst)
+ *	convert from presentation format (which usually means ASCII printable)
+ *	to network format (which is usually some kind of binary format).
+ * return:
+ *	1 if the address was valid for the specified address family
+ *	0 if the address wasn't valid (`dst' is untouched in this case)
+ *	-1 if some other error occurred (`dst' is untouched in this case, too)
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static int
+inet_pton_impl(int af,
+	  const char *src,
+	  void *dst)
+{
+	switch (af) {
+	case AF_INET:
+		return (inet_pton4(src, (unsigned char *)dst));
+#ifdef AF_INET6
+	case AF_INET6:
+		return (inet_pton6(src, (unsigned char *)dst));
+#endif
+	default:
+		errno = EAFNOSUPPORT;
+		return (-1);
+	}
+	/* NOTREACHED */
+}
+
+/* int
+ * inet_pton4(src, dst)
+ *	like inet_aton() but without all the hexadecimal and shorthand.
+ * return:
+ *	1 if `src' is a valid dotted quad, else 0.
+ * notice:
+ *	does not touch `dst' unless it's returning 1.
+ * author:
+ *	Paul Vixie, 1996.
+ */
+static int
+inet_pton4(const char *src, unsigned char *dst)
+{
+	static const char digits[] = "0123456789";
+	int saw_digit, octets, ch;
+	unsigned char tmp[NS_INADDRSZ], *tp;
+
+	saw_digit = 0;
+	octets = 0;
+	*(tp = tmp) = 0;
+	while ((ch = *src++) != '\0') {
+		const char *pch;
+
+		if ((pch = strchr(digits, ch)) != NULL) {
+			unsigned int new_ = *tp * 10 + (pch - digits);
+
+			if (new_ > 255)
+				return (0);
+			*tp = new_;
+			if (! saw_digit) {
+				if (++octets > 4)
+					return (0);
+				saw_digit = 1;
+			}
+		} else if (ch == '.' && saw_digit) {
+			if (octets == 4)
+				return (0);
+			*++tp = 0;
+			saw_digit = 0;
+		} else
+			return (0);
+	}
+	if (octets < 4)
+		return (0);
+	memcpy(dst, tmp, NS_INADDRSZ);
+	return (1);
+}
+
+/* int
+ * inet_pton6(src, dst)
+ *	convert presentation level address to network order binary form.
+ * return:
+ *	1 if `src' is a valid [RFC1884 2.2] address, else 0.
+ * notice:
+ *	(1) does not touch `dst' unless it's returning 1.
+ *	(2) :: in a full address is silently ignored.
+ * credit:
+ *	inspired by Mark Andrews.
+ * author:
+ *	Paul Vixie, 1996.
+ */
+#ifdef AF_INET6
+static int
+inet_pton6(const char *src, unsigned char *dst)
+{
+	static const char xdigits_l[] = "0123456789abcdef",
+			  xdigits_u[] = "0123456789ABCDEF";
+	unsigned char tmp[NS_IN6ADDRSZ], *tp, *endp, *colonp;
+	const char *xdigits, *curtok;
+	int ch, saw_xdigit;
+	unsigned int val;
+
+	memset((tp = tmp), '\0', NS_IN6ADDRSZ);
+	endp = tp + NS_IN6ADDRSZ;
+	colonp = NULL;
+	/* Leading :: requires some special handling. */
+	if (*src == ':')
+		if (*++src != ':')
+			return (0);
+	curtok = src;
+	saw_xdigit = 0;
+	val = 0;
+	while ((ch = *src++) != '\0') {
+		const char *pch;
+
+		if ((pch = strchr((xdigits = xdigits_l), ch)) == NULL)
+			pch = strchr((xdigits = xdigits_u), ch);
+		if (pch != NULL) {
+			val <<= 4;
+			val |= (pch - xdigits);
+			if (val > 0xffff)
+				return (0);
+			saw_xdigit = 1;
+			continue;
+		}
+		if (ch == ':') {
+			curtok = src;
+			if (!saw_xdigit) {
+				if (colonp)
+					return (0);
+				colonp = tp;
+				continue;
+			}
+			if (tp + NS_INT16SZ > endp)
+				return (0);
+			*tp++ = (unsigned char) (val >> 8) & 0xff;
+			*tp++ = (unsigned char) val & 0xff;
+			saw_xdigit = 0;
+			val = 0;
+			continue;
+		}
+		if (ch == '.' && ((tp + NS_INADDRSZ) <= endp) &&
+		    inet_pton4(curtok, tp) > 0) {
+			tp += NS_INADDRSZ;
+			saw_xdigit = 0;
+			break;	/* '\0' was seen by inet_pton4(). */
+		}
+		return (0);
+	}
+	if (saw_xdigit) {
+		if (tp + NS_INT16SZ > endp)
+			return (0);
+		*tp++ = (unsigned char) (val >> 8) & 0xff;
+		*tp++ = (unsigned char) val & 0xff;
+	}
+	if (colonp != NULL) {
+		/*
+		 * Since some memmove()'s erroneously fail to handle
+		 * overlapping regions, we'll do the shift by hand.
+		 */
+		const int n = tp - colonp;
+		int i;
+
+		for (i = 1; i <= n; i++) {
+			endp[- i] = colonp[n - i];
+			colonp[n - i] = 0;
+		}
+		tp = endp;
+	}
+	if (tp != endp)
+		return (0);
+	memcpy(dst, tmp, NS_IN6ADDRSZ);
+	return (1);
+}
+#endif
+
+#endif /* INET_PTON_H */
diff --git a/src/utils/pcsc_funcs.c b/src/utils/pcsc_funcs.c
index 383ed3d..ef39817 100644
--- a/src/utils/pcsc_funcs.c
+++ b/src/utils/pcsc_funcs.c
@@ -123,7 +123,8 @@ struct scard_data {
 	int pin1_required;
 };
 
-#ifdef __MINGW32_VERSION
+/*#ifdef __MINGW32_VERSION*/
+#ifndef UNICODE
 /* MinGW does not yet support WinScard, so load the needed functions
  * dynamically from winscard.dll for now. */
 
@@ -136,8 +137,8 @@ static const SCARD_IO_REQUEST *dll_g_rgSCardT0Pci, *dll_g_rgSCardT1Pci;
 #define SCARD_PCI_T1 (dll_g_rgSCardT1Pci)
 
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardEstablishContext)(IN DWORD dwScope,
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardEstablishContext)(IN DWORD dwScope,
 			     IN LPCVOID pvReserved1,
 			     IN LPCVOID pvReserved2,
 			     OUT LPSCARDCONTEXT phContext);
@@ -146,16 +147,16 @@ static WINSCARDAPI LONG WINAPI
 static long (*dll_SCardReleaseContext)(long hContext);
 #define SCardReleaseContext dll_SCardReleaseContext
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardListReadersA)(IN SCARDCONTEXT hContext,
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardListReadersA)(IN SCARDCONTEXT hContext,
 			 IN LPCSTR mszGroups,
 			 OUT LPSTR mszReaders,
 			 IN OUT LPDWORD pcchReaders);
 #undef SCardListReaders
 #define SCardListReaders dll_SCardListReadersA
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardConnectA)(IN SCARDCONTEXT hContext,
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardConnectA)(IN SCARDCONTEXT hContext,
 		     IN LPCSTR szReader,
 		     IN DWORD dwShareMode,
 		     IN DWORD dwPreferredProtocols,
@@ -164,13 +165,13 @@ static WINSCARDAPI LONG WINAPI
 #undef SCardConnect
 #define SCardConnect dll_SCardConnectA
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardDisconnect)(IN SCARDHANDLE hCard,
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardDisconnect)(IN SCARDHANDLE hCard,
 		       IN DWORD dwDisposition);
 #define SCardDisconnect dll_SCardDisconnect
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardTransmit)(IN SCARDHANDLE hCard,
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardTransmit)(IN SCARDHANDLE hCard,
 		     IN LPCSCARD_IO_REQUEST pioSendPci,
 		     IN LPCBYTE pbSendBuffer,
 		     IN DWORD cbSendLength,
@@ -179,12 +180,12 @@ static WINSCARDAPI LONG WINAPI
 		     IN OUT LPDWORD pcbRecvLength);
 #define SCardTransmit dll_SCardTransmit
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardBeginTransaction)(IN SCARDHANDLE hCard);
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardBeginTransaction)(IN SCARDHANDLE hCard);
 #define SCardBeginTransaction dll_SCardBeginTransaction
 
-static WINSCARDAPI LONG WINAPI
-(*dll_SCardEndTransaction)(IN SCARDHANDLE hCard, IN DWORD dwDisposition);
+static WINSCARDAPI LONG
+(WINAPI *dll_SCardEndTransaction)(IN SCARDHANDLE hCard, IN DWORD dwDisposition);
 #define SCardEndTransaction dll_SCardEndTransaction
 
 
diff --git a/src/utils/trace.h b/src/utils/trace.h
index d1636de..8594512 100644
--- a/src/utils/trace.h
+++ b/src/utils/trace.h
@@ -23,7 +23,7 @@ struct wpa_trace_ref {
 	const void *addr;
 	WPA_TRACE_INFO
 };
-#define WPA_TRACE_REF(name) struct wpa_trace_ref wpa_trace_ref_##name
+#define WPA_TRACE_REF(name) struct wpa_trace_ref wpa_trace_ref_##name ;
 
 #define wpa_trace_dump(title, ptr) \
 	wpa_trace_dump_func((title), (ptr)->btrace, (ptr)->btrace_num)
diff --git a/src/utils/wpa_debug.c b/src/utils/wpa_debug.c
index a338a20..4f00676 100644
--- a/src/utils/wpa_debug.c
+++ b/src/utils/wpa_debug.c
@@ -564,6 +564,23 @@ int wpa_debug_open_file(const char *path)
 
 	out_fd = open(path, O_CREAT | O_APPEND | O_WRONLY,
 		      S_IRUSR | S_IWUSR | S_IRGRP);
+#ifdef CONFIG_NATIVE_WINDOWS
+	if (out_fd < 0 && os_strncasecmp(path, "\\Temp\\", 6) == 0) {
+		char *buf = NULL;
+		char *temp = getenv("TEMP");
+		if (!temp)
+			temp = getenv("TMP");
+
+		if (temp) {
+			size_t buf_len = os_strlen(temp) + os_strlen(path);
+			buf = os_malloc(buf_len);
+			os_snprintf(buf, buf_len, "%s\\%s", temp, path + 6);
+			out_fd = open(buf, O_CREAT | O_APPEND | O_WRONLY,
+					  S_IRUSR | S_IWUSR | S_IRGRP);
+			os_free(buf);
+		}
+	}
+#endif
 	if (out_fd < 0) {
 		wpa_printf(MSG_ERROR,
 			   "%s: Failed to open output file descriptor, using standard output",
diff --git a/src/utils/wpa_debug.h b/src/utils/wpa_debug.h
index c6d5cc6..b062d13 100644
--- a/src/utils/wpa_debug.h
+++ b/src/utils/wpa_debug.h
@@ -26,7 +26,11 @@ enum {
 #ifdef CONFIG_NO_STDOUT_DEBUG
 
 #define wpa_debug_print_timestamp() do { } while (0)
+#ifdef _MSC_VER
+#define wpa_printf(args, ...) do { } while (0)
+#else
 #define wpa_printf(args...) do { } while (0)
+#endif
 #define wpa_hexdump(l,t,b,le) do { } while (0)
 #define wpa_hexdump_buf(l,t,b) do { } while (0)
 #define wpa_hexdump_key(l,t,b,le) do { } while (0)
@@ -36,7 +40,11 @@ enum {
 #define wpa_debug_open_file(p) do { } while (0)
 #define wpa_debug_close_file() do { } while (0)
 #define wpa_debug_setup_stdout() do { } while (0)
+#ifdef _MSC_VER
+#define wpa_dbg(args, ...) do { } while (0)
+#else
 #define wpa_dbg(args...) do { } while (0)
+#endif
 
 static inline int wpa_debug_reopen_file(void)
 {
@@ -154,7 +162,11 @@ void wpa_hexdump_ascii_key(int level, const char *title, const void *buf,
  * needed in the control interface while wpa_msg() has to be used for anything
  * that needs to shown to control interface monitors.
  */
+#if defined(_MSC_VER)
+#define wpa_dbg(args, ...)  wpa_msg(args, __VA_ARGS__)
+#else
 #define wpa_dbg(args...) wpa_msg(args)
+#endif
 
 #endif /* CONFIG_NO_STDOUT_DEBUG */
 
diff --git a/wpa_supplicant/autoscan_exponential.c b/wpa_supplicant/autoscan_exponential.c
index 424477b..1208e70 100644
--- a/wpa_supplicant/autoscan_exponential.c
+++ b/wpa_supplicant/autoscan_exponential.c
@@ -97,8 +97,8 @@ static int autoscan_exponential_notify_scan(void *priv,
 
 
 const struct autoscan_ops autoscan_exponential_ops = {
-	.name = "exponential",
-	.init = autoscan_exponential_init,
-	.deinit = autoscan_exponential_deinit,
-	.notify_scan = autoscan_exponential_notify_scan,
+	"exponential",
+	autoscan_exponential_init,
+	autoscan_exponential_deinit,
+	autoscan_exponential_notify_scan,
 };
diff --git a/wpa_supplicant/autoscan_periodic.c b/wpa_supplicant/autoscan_periodic.c
index 102d723..7096066 100644
--- a/wpa_supplicant/autoscan_periodic.c
+++ b/wpa_supplicant/autoscan_periodic.c
@@ -78,8 +78,8 @@ static int autoscan_periodic_notify_scan(void *priv,
 
 
 const struct autoscan_ops autoscan_periodic_ops = {
-	.name = "periodic",
-	.init = autoscan_periodic_init,
-	.deinit = autoscan_periodic_deinit,
-	.notify_scan = autoscan_periodic_notify_scan,
+	"periodic",
+	autoscan_periodic_init,
+	autoscan_periodic_deinit,
+	autoscan_periodic_notify_scan,
 };
diff --git a/wpa_supplicant/bgscan_learn.c b/wpa_supplicant/bgscan_learn.c
index cb732f7..847ae7c 100644
--- a/wpa_supplicant/bgscan_learn.c
+++ b/wpa_supplicant/bgscan_learn.c
@@ -605,10 +605,10 @@ static void bgscan_learn_notify_signal_change(void *priv, int above,
 
 
 const struct bgscan_ops bgscan_learn_ops = {
-	.name = "learn",
-	.init = bgscan_learn_init,
-	.deinit = bgscan_learn_deinit,
-	.notify_scan = bgscan_learn_notify_scan,
-	.notify_beacon_loss = bgscan_learn_notify_beacon_loss,
-	.notify_signal_change = bgscan_learn_notify_signal_change,
+	"learn",
+	bgscan_learn_init,
+	bgscan_learn_deinit,
+	bgscan_learn_notify_scan,
+	bgscan_learn_notify_beacon_loss,
+	bgscan_learn_notify_signal_change,
 };
diff --git a/wpa_supplicant/bgscan_simple.c b/wpa_supplicant/bgscan_simple.c
index 41a26df..efc82e7 100644
--- a/wpa_supplicant/bgscan_simple.c
+++ b/wpa_supplicant/bgscan_simple.c
@@ -266,10 +266,10 @@ static void bgscan_simple_notify_signal_change(void *priv, int above,
 
 
 const struct bgscan_ops bgscan_simple_ops = {
-	.name = "simple",
-	.init = bgscan_simple_init,
-	.deinit = bgscan_simple_deinit,
-	.notify_scan = bgscan_simple_notify_scan,
-	.notify_beacon_loss = bgscan_simple_notify_beacon_loss,
-	.notify_signal_change = bgscan_simple_notify_signal_change,
+	"simple",
+	bgscan_simple_init,
+	bgscan_simple_deinit,
+	bgscan_simple_notify_scan,
+	bgscan_simple_notify_beacon_loss,
+	bgscan_simple_notify_signal_change,
 };
diff --git a/wpa_supplicant/ctrl_iface.c b/wpa_supplicant/ctrl_iface.c
index bcd67fc..98fcb3d 100644
--- a/wpa_supplicant/ctrl_iface.c
+++ b/wpa_supplicant/ctrl_iface.c
@@ -1253,10 +1253,10 @@ static int wpa_supplicant_ctrl_iface_tdls_link_status(
 static int wmm_ac_ctrl_addts(struct wpa_supplicant *wpa_s, char *cmd)
 {
 	char *token, *context = NULL;
-	struct wmm_ac_ts_setup_params params = {
-		.tsid = 0xff,
-		.direction = 0xff,
-	};
+	struct wmm_ac_ts_setup_params params;
+	os_memset(&params, 0, sizeof(params));
+	params.tsid = 0xff;
+	params.direction = 0xff;
 
 	while ((token = str_token(cmd, " ", &context))) {
 		if (sscanf(token, "tsid=%i", &params.tsid) == 1 ||
@@ -8210,9 +8210,9 @@ static int wpas_ctrl_iface_driver_flags(struct wpa_supplicant *wpa_s,
 	end = buf + buflen;
 
 	for (i = 0; i < 64; i++) {
-		if (wpa_s->drv_flags & (1LLU << i)) {
+		if (wpa_s->drv_flags & (((unsigned long long)1) << i)) {
 			ret = os_snprintf(pos, end - pos, "%s\n",
-					  driver_flag_to_string(1LLU << i));
+					  driver_flag_to_string(((unsigned long long)1) << i));
 			if (os_snprintf_error(end - pos, ret))
 				return -1;
 			pos += ret;
@@ -8238,9 +8238,9 @@ static int wpas_ctrl_iface_driver_flags2(struct wpa_supplicant *wpa_s,
 	end = buf + buflen;
 
 	for (i = 0; i < 64; i++) {
-		if (wpa_s->drv_flags2 & (1LLU << i)) {
+		if (wpa_s->drv_flags2 & (((unsigned long long)1) << i)) {
 			ret = os_snprintf(pos, end - pos, "%s\n",
-					  driver_flag2_to_string(1LLU << i));
+					  driver_flag2_to_string(((unsigned long long)1) << i));
 			if (os_snprintf_error(end - pos, ret))
 				return -1;
 			pos += ret;
diff --git a/wpa_supplicant/ctrl_iface_named_pipe.c b/wpa_supplicant/ctrl_iface_named_pipe.c
index bddc041..721ea1c 100644
--- a/wpa_supplicant/ctrl_iface_named_pipe.c
+++ b/wpa_supplicant/ctrl_iface_named_pipe.c
@@ -48,6 +48,58 @@ ConvertStringSecurityDescriptorToSecurityDescriptorA
 #define REQUEST_BUFSIZE CTRL_IFACE_MAX_LEN
 #define REPLY_BUFSIZE 4096
 
+#if !defined(UNICODE) && !defined(_UNICODE)
+#ifdef ConvertStringSecurityDescriptorToSecurityDescriptor
+#undef ConvertStringSecurityDescriptorToSecurityDescriptor
+#endif
+
+static BOOL ConvertStringSecurityDescriptorToSecurityDescriptor_fb(
+	LPCSTR StringSecurityDescriptor, DWORD StringSDRevision,
+	PSECURITY_DESCRIPTOR *SecurityDescriptor, PULONG SecurityDescriptorSize)
+{
+	(void)StringSecurityDescriptor;
+	(void)StringSDRevision;
+	*SecurityDescriptor = NULL;
+	*SecurityDescriptorSize = 0;
+	return TRUE;
+}
+
+static BOOL ConvertStringSecurityDescriptorToSecurityDescriptor_impl(
+	LPCSTR StringSecurityDescriptor, DWORD StringSDRevision,
+	PSECURITY_DESCRIPTOR *SecurityDescriptor, PULONG SecurityDescriptorSize)
+{
+	typedef BOOL (WINAPI *func_t)(LPCSTR, DWORD, PSECURITY_DESCRIPTOR *, PULONG);
+	HINSTANCE dll;
+	BOOL result;
+	func_t func;
+
+	dll = LoadLibrary("advapi32");
+	if (dll == NULL) {
+		wpa_printf(MSG_DEBUG, "CTRL: Could not load advapi32.dll library");
+		result = ConvertStringSecurityDescriptorToSecurityDescriptor_fb(
+					StringSecurityDescriptor, StringSDRevision,
+					SecurityDescriptor, SecurityDescriptorSize);
+		return result;
+	}
+
+	func = (func_t)GetProcAddress(dll, "ConvertStringSecurityDescriptorToSecurityDescriptorA");
+	if (func == NULL) {
+		wpa_printf(MSG_DEBUG, "CTRL: Could not resolve ConvertStringSecurityDescriptorToSecurityDescriptorA");
+		result = ConvertStringSecurityDescriptorToSecurityDescriptor_fb(
+					StringSecurityDescriptor, StringSDRevision,
+					SecurityDescriptor, SecurityDescriptorSize);
+	} else {
+		result = func(StringSecurityDescriptor, StringSDRevision,
+					  SecurityDescriptor, SecurityDescriptorSize);
+	}
+
+	FreeLibrary(dll);
+	return result;
+}
+
+#define ConvertStringSecurityDescriptorToSecurityDescriptor ConvertStringSecurityDescriptorToSecurityDescriptor_impl
+#endif
+
 struct ctrl_iface_priv;
 
 /**
diff --git a/wpa_supplicant/eapol_test.c b/wpa_supplicant/eapol_test.c
index e256ac5..034e1c2 100644
--- a/wpa_supplicant/eapol_test.c
+++ b/wpa_supplicant/eapol_test.c
@@ -986,12 +986,7 @@ static int driver_get_capa(void *priv, struct wpa_driver_capa *capa)
 }
 
 
-struct wpa_driver_ops eapol_test_drv_ops = {
-	.name = "test",
-	.get_ssid = driver_get_ssid,
-	.get_bssid = driver_get_bssid,
-	.get_capa = driver_get_capa,
-};
+struct wpa_driver_ops eapol_test_drv_ops;
 
 static void wpa_init_conf(struct eapol_test_data *e,
 			  struct wpa_supplicant *wpa_s, const char *authsrv,
@@ -1001,6 +996,12 @@ static void wpa_init_conf(struct eapol_test_data *e,
 	struct hostapd_radius_server *as;
 	int res;
 
+	os_memset(&eapol_test_drv_ops, 0, sizeof(eapol_test_drv_ops));
+	eapol_test_drv_ops.name = "test";
+	eapol_test_drv_ops.get_ssid = driver_get_ssid;
+	eapol_test_drv_ops.get_bssid = driver_get_bssid;
+	eapol_test_drv_ops.get_capa = driver_get_capa;
+
 	wpa_s->driver = &eapol_test_drv_ops;
 	wpa_s->drv_priv = e;
 	wpa_s->bssid[5] = 1;
diff --git a/wpa_supplicant/main_winsvc.c b/wpa_supplicant/main_winsvc.c
index 9950aa9..8211097 100644
--- a/wpa_supplicant/main_winsvc.c
+++ b/wpa_supplicant/main_winsvc.c
@@ -27,6 +27,38 @@
 #include "wpa_supplicant_i.h"
 #include "eloop.h"
 
+#ifndef UNICODE
+static BOOL ChangeServiceConfig2A_impl(SC_HANDLE hService, DWORD dwInfoLevel, LPVOID lpInfo)
+{
+	typedef BOOL (WINAPI *func_t)(SC_HANDLE, DWORD, LPVOID);
+	HINSTANCE dll;
+	BOOL result;
+	func_t func;
+
+	dll = LoadLibrary("advapi32");
+	if (dll == NULL) {
+		printf("ChangeServiceConfig2: Could not load advapi32.dll library");
+		result = FALSE;
+		return result;
+	}
+
+	func = (func_t)GetProcAddress(dll, "ChangeServiceConfig2A");
+	if (func == NULL) {
+		printf("ChangeServiceConfig2: Could not resolve ChangeServiceConfig2A");
+		result = FALSE;
+	} else {
+		result = func(hService, dwInfoLevel, lpInfo);
+	}
+
+	FreeLibrary(dll);
+	return result;
+}
+#ifdef ChangeServiceConfig2
+#undef ChangeServiceConfig2
+#endif
+#define ChangeServiceConfig2 ChangeServiceConfig2A_impl
+#endif
+
 #ifndef WPASVC_NAME
 #define WPASVC_NAME TEXT("wpasvc")
 #endif
@@ -131,6 +163,59 @@ static int read_interface(struct wpa_global *global, HKEY _hk,
 }
 
 
+static void prepare_registry(void)
+{
+	LONG ret;
+	HKEY hk, ihk;
+
+	hk = NULL;
+	ret = RegOpenKeyEx(WPA_KEY_ROOT, WPA_KEY_PREFIX, 0, KEY_QUERY_VALUE, &hk);
+	if (ret == ERROR_FILE_NOT_FOUND) {
+		hk = NULL;
+		ret = RegCreateKeyEx(WPA_KEY_ROOT, WPA_KEY_PREFIX, 0, NULL, 0, KEY_WRITE, NULL, &hk, NULL);
+		if (ret == ERROR_SUCCESS) {
+			DWORD dwVal = 0;
+			RegSetValueEx(hk, TEXT("debug_level"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+			RegSetValueEx(hk, TEXT("debug_show_keys"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+			RegSetValueEx(hk, TEXT("debug_timestamp"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+			RegSetValueEx(hk, TEXT("debug_use_file"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+		}
+	}
+	if (!hk)
+		return;
+
+	ihk = NULL;
+	ret = RegOpenKeyEx(hk, TEXT("interfaces"), 0, KEY_QUERY_VALUE, &ihk);
+	if (ret == ERROR_FILE_NOT_FOUND)
+		RegCreateKeyEx(hk, TEXT("interfaces"), 0, NULL, 0, KEY_WRITE, NULL, &ihk, NULL);
+	if (ihk)
+		RegCloseKey(ihk);
+
+	ihk = NULL;
+	ret = RegOpenKeyEx(hk, TEXT("configs\\default"), 0, KEY_QUERY_VALUE, &ihk);
+	if (ret == ERROR_FILE_NOT_FOUND) {
+		ret = RegCreateKeyEx(hk, TEXT("configs\\default"), 0, NULL, 0, KEY_WRITE, NULL, &ihk, NULL);
+		if (ret == ERROR_SUCCESS) {
+			DWORD dwVal = 2;
+			RegSetValueEx(ihk, TEXT("ap_scan"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+			dwVal = 1;
+			RegSetValueEx(ihk, TEXT("update_config"), 0, REG_DWORD, (BYTE*)(&dwVal), sizeof(DWORD));
+		}
+	}
+	if (ihk)
+		RegCloseKey(ihk);
+
+	ihk = NULL;
+	ret = RegOpenKeyEx(hk, TEXT("configs\\default\\networks"), 0, KEY_QUERY_VALUE, &ihk);
+	if (ret == ERROR_FILE_NOT_FOUND)
+		RegCreateKeyEx(hk, TEXT("configs\\default\\networks"), 0, NULL, 0, KEY_WRITE, NULL, &ihk, NULL);
+	if (ihk)
+		RegCloseKey(ihk);
+
+	RegCloseKey(hk);
+}
+
+
 static int wpa_supplicant_thread(void)
 {
 	int exitcode;
@@ -146,6 +231,8 @@ static int wpa_supplicant_thread(void)
 	os_memset(&params, 0, sizeof(params));
 	params.wpa_debug_level = MSG_INFO;
 
+	prepare_registry();
+
 	ret = RegOpenKeyEx(WPA_KEY_ROOT, WPA_KEY_PREFIX,
 			   0, KEY_QUERY_VALUE, &hk);
 	if (ret != ERROR_SUCCESS) {
@@ -439,6 +526,7 @@ int main(int argc, char *argv[])
 				if (path == NULL)
 					return -1;
 			}
+			prepare_registry();
 			ret = register_service(path);
 			os_free(path);
 			return ret;
diff --git a/wpa_supplicant/nmake.mak b/wpa_supplicant/nmake.mak
index 617df03..27c367e 100644
--- a/wpa_supplicant/nmake.mak
+++ b/wpa_supplicant/nmake.mak
@@ -9,7 +9,8 @@ all: wpa_supplicant.exe wpa_cli.exe wpa_passphrase.exe wpasvc.exe win_if_list.ex
 
 # Root directory for WinPcap developer's pack
 # (http://www.winpcap.org/install/bin/WpdPack_3_1.zip)
-WINPCAPDIR=C:\dev\WpdPack
+#WINPCAPDIR=C:\dev\WpdPack
+WINPCAPDIR=..\..\WpdPack
 
 # Root directory for OpenSSL
 # (http://www.openssl.org/source/openssl-0.9.8a.tar.gz)
@@ -18,7 +19,8 @@ WINPCAPDIR=C:\dev\WpdPack
 # support it (openssl-tls-extensions.patch)
 # Alternatively, see README-Windows.txt for information about binary
 # installation package for OpenSSL.
-OPENSSLDIR=C:\dev\openssl
+#OPENSSLDIR=C:\dev\openssl
+OPENSSLDIR=..\..\openssl-1.1.1-x86
 
 CC = cl
 OBJDIR = objs
@@ -40,18 +42,23 @@ CFLAGS = $(CFLAGS) /DEAP_SIM
 CFLAGS = $(CFLAGS) /DEAP_LEAP
 CFLAGS = $(CFLAGS) /DEAP_PSK
 CFLAGS = $(CFLAGS) /DEAP_AKA
-#CFLAGS = $(CFLAGS) /DEAP_FAST
+CFLAGS = $(CFLAGS) /DEAP_FAST
 CFLAGS = $(CFLAGS) /DEAP_PAX
 CFLAGS = $(CFLAGS) /DEAP_TNC
 CFLAGS = $(CFLAGS) /DPCSC_FUNCS
 CFLAGS = $(CFLAGS) /DCONFIG_CTRL_IFACE
 CFLAGS = $(CFLAGS) /DCONFIG_CTRL_IFACE_NAMED_PIPE
 CFLAGS = $(CFLAGS) /DCONFIG_DRIVER_NDIS
+CFLAGS = $(CFLAGS) /DEAP_TLS_OPENSSL
+CFLAGS = $(CFLAGS) /DCONFIG_SHA256
+CFLAGS = $(CFLAGS) /DCONFIG_NO_SOCKLEN_T_TYPEDEF
+CFLAGS = $(CFLAGS) /DTLS_DEFAULT_CIPHERS=\"DEFAULT:!EXP:!LOW\"
 CFLAGS = $(CFLAGS) /I..\src /I..\src\utils
 CFLAGS = $(CFLAGS) /I.
 CFLAGS = $(CFLAGS) /DWIN32
 CFLAGS = $(CFLAGS) /Fo$(OBJDIR)\\ /c
 CFLAGS = $(CFLAGS) /W3
+CFLAGS = $(CFLAGS) /wd4244 /wd4267 /wd4311 /wd4996
 
 #CFLAGS = $(CFLAGS) /WX
 
@@ -60,19 +67,36 @@ CFLAGS = $(CFLAGS) /W3
 CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE
 
 OBJS = \
+	$(OBJDIR)\config___wpasup.obj \
+	$(OBJDIR)\config___utils.obj \
+	$(OBJDIR)\op_classes.obj \
+	$(OBJDIR)\random.obj \
+	$(OBJDIR)\robust_av.obj \
+	$(OBJDIR)\rrm.obj \
+	$(OBJDIR)\sha256-prf.obj \
+	$(OBJDIR)\sha256-tlsprf.obj \
+	$(OBJDIR)\tls_openssl_ocsp.obj \
+	$(OBJDIR)\twt.obj \
+	$(OBJDIR)\wmm_ac.obj \
+	$(OBJDIR)\hw_features_common.obj \
+	$(OBJDIR)\ieee802_11_common.obj \
+	$(OBJDIR)\ip_addr.obj \
+	$(OBJDIR)\eap_fast.obj \
+	$(OBJDIR)\eap_fast_common.obj \
+	$(OBJDIR)\eap_fast_pac.obj \
+	$(OBJDIR)\crc32.obj \
+	$(OBJDIR)\driver_common.obj \
+	$(OBJDIR)\bitfield.obj \
+	$(OBJDIR)\bss.obj \
+	$(OBJDIR)\sha1-prf.obj \
+	$(OBJDIR)\sha1-tprf.obj \
 	$(OBJDIR)\os_win32.obj \
 	$(OBJDIR)\eloop_win.obj \
-	$(OBJDIR)\sha1.obj \
 	$(OBJDIR)\sha1-tlsprf.obj \
-	$(OBJDIR)\sha1-pbkdf2.obj \
-	$(OBJDIR)\md5.obj \
-	$(OBJDIR)\aes-cbc.obj \
 	$(OBJDIR)\aes-ctr.obj \
 	$(OBJDIR)\aes-eax.obj \
 	$(OBJDIR)\aes-encblock.obj \
 	$(OBJDIR)\aes-omac1.obj \
-	$(OBJDIR)\aes-unwrap.obj \
-	$(OBJDIR)\aes-wrap.obj \
 	$(OBJDIR)\common.obj \
 	$(OBJDIR)\wpa_debug.obj \
 	$(OBJDIR)\wpabuf.obj \
@@ -112,13 +136,11 @@ OBJS = \
 	$(OBJDIR)\ctrl_iface_named_pipe.obj \
 	$(OBJDIR)\driver_ndis.obj \
 	$(OBJDIR)\driver_ndis_.obj \
-	$(OBJDIR)\scan_helpers.obj \
 	$(OBJDIR)\events.obj \
 	$(OBJDIR)\bssid_ignore.obj \
 	$(OBJDIR)\scan.obj \
 	$(OBJDIR)\wpas_glue.obj \
 	$(OBJDIR)\eap_register.obj \
-	$(OBJDIR)\config.obj \
 	$(OBJDIR)\l2_packet_winpcap.obj \
 	$(OBJDIR)\tls_openssl.obj \
 	$(OBJDIR)\ms_funcs.obj \
@@ -128,17 +150,15 @@ OBJS = \
 	$(OBJDIR)\notify.obj \
 	$(OBJDIR)\ndis_events.obj
 
-# OBJS = $(OBJS) $(OBJDIR)\eap_fast.obj
-
 OBJS_t = $(OBJS) \
 	$(OBJDIR)\eapol_test.obj \
 	$(OBJDIR)\radius.obj \
 	$(OBJDIR)\radius_client.obj \
-	$(OBJDIR)\config_file.obj $(OBJDIR)\base64.obj
+	$(OBJDIR)\config_file.obj
 
 OBJS_t2 = $(OBJS) \
 	$(OBJDIR)\preauth_test.obj \
-	$(OBJDIR)\config_file.obj $(OBJDIR)\base64.obj
+	$(OBJDIR)\config_file.obj
 
 OBJS2 = $(OBJDIR)\drivers.obj \
 	$(OBJDIR)\config_file.obj \
@@ -149,6 +169,10 @@ OBJS3 = $(OBJDIR)\drivers.obj \
 	$(OBJS3) $(OBJDIR)\main_winsvc.obj
 
 OBJS_c = \
+	$(OBJDIR)\cli.obj \
+	$(OBJDIR)\edit_simple.obj \
+	$(OBJDIR)\eloop_win.obj \
+	$(OBJDIR)\wpa_debug.obj \
 	$(OBJDIR)\os_win32.obj \
 	$(OBJDIR)\wpa_cli.obj \
 	$(OBJDIR)\wpa_ctrl.obj \
@@ -159,16 +183,13 @@ OBJS_p = \
 	$(OBJDIR)\common.obj \
 	$(OBJDIR)\wpa_debug.obj \
 	$(OBJDIR)\wpabuf.obj \
-	$(OBJDIR)\sha1.obj \
-	$(OBJDIR)\md5.obj \
 	$(OBJDIR)\crypto_openssl.obj \
-	$(OBJDIR)\sha1-pbkdf2.obj \
 	$(OBJDIR)\wpa_passphrase.obj
 
 LIBS = wbemuuid.lib libcmt.lib kernel32.lib uuid.lib ole32.lib oleaut32.lib \
 	ws2_32.lib Advapi32.lib Crypt32.lib Winscard.lib \
 	Packet.lib wpcap.lib \
-	libeay32.lib ssleay32.lib
+	libcrypto.lib libssl.lib User32.lib
 # If using Win32 OpenSSL binary installation from Shining Light Productions,
 # replace the last line with this for dynamic libraries
 #	libeay32MT.lib ssleay32MT.lib
@@ -227,14 +248,26 @@ win_if_list.exe: $(OBJDIR) $(OBJDIR)\win_if_list.obj
 {..\src\l2_packet}.c{$(OBJDIR)}.obj::
 	$(CC) $(CFLAGS) $<
 
+{..\src\radius}.c{$(OBJDIR)}.obj::
+	$(CC) $(CFLAGS) $<
+
 {.\}.c{$(OBJDIR)}.obj::
 	$(CC) $(CFLAGS) $<
 
 {.\}.cpp{$(OBJDIR)}.obj::
 	$(CC) $(CFLAGS) $<
 
+# @todo Conflict between src/utils/config.c and wpa_supplicant/config.c
+$(OBJDIR)\config___wpasup.obj:
+	$(CC) $(CFLAGS) .\config.c /Fo$(OBJDIR)\config___wpasup.obj
+
+$(OBJDIR)\config___utils.obj:
+	$(CC) $(CFLAGS) ..\src\utils\config.c /Fo$(OBJDIR)\config___utils.obj
+
 $(OBJDIR):
 	if not exist "$(OBJDIR)" mkdir "$(OBJDIR)"
 
 clean:
 	erase $(OBJDIR)\*.obj wpa_supplicant.exe
+	erase wpa_cli.exe wpa_passphrase.exe wpasvc.exe win_if_list.exe
+	erase eapol_test.exe preauth_test.exe
diff --git a/wpa_supplicant/vs2005/eapol_test/eapol_test.vcproj b/wpa_supplicant/vs2005/eapol_test/eapol_test.vcproj
index c92b8fd..50cded3 100755
--- a/wpa_supplicant/vs2005/eapol_test/eapol_test.vcproj
+++ b/wpa_supplicant/vs2005/eapol_test/eapol_test.vcproj
@@ -40,7 +40,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -49,7 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -62,9 +62,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				TargetMachine="1"
@@ -119,14 +119,14 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				RuntimeLibrary="2"
 				UsePrecompiledHeader="0"
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -139,9 +139,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				OptimizeReferences="2"
@@ -182,10 +182,6 @@
 			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
-			<File
-				RelativePath="..\..\..\src\crypto\aes-cbc.c"
-				>
-			</File>
 			<File
 				RelativePath="..\..\..\src\crypto\aes-ctr.c"
 				>
@@ -203,15 +199,15 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-unwrap.c"
+				RelativePath="..\..\..\src\utils\base64.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-wrap.c"
+				RelativePath="..\..\..\src\utils\bitfield.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\base64.c"
+				RelativePath="..\..\bss.c"
 				>
 			</File>
 			<File
@@ -219,27 +215,59 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\bss.c"
+				RelativePath="..\..\..\src\eap_common\chap.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_common\chap.c"
+				RelativePath="..\..\..\src\utils\common.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\common.c"
+				RelativePath="..\..\config.c"
 				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\..\src\utils\config.c"
 				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\..\config.c"
+				RelativePath="..\..\config_file.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\config_file.c"
+				RelativePath="..\..\..\src\utils\crc32.c"
 				>
 			</File>
 			<File
@@ -258,6 +286,14 @@
 				RelativePath="..\..\..\src\drivers\driver_common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\drivers\driver_ndis.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\drivers\driver_ndis_.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap.c"
 				>
@@ -270,6 +306,18 @@
 				RelativePath="..\..\..\src\eap_common\eap_common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_fast_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast_pac.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_gtc.c"
 				>
@@ -294,6 +342,14 @@
 				RelativePath="..\..\..\src\eap_peer\eap_otp.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_pax.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_pax_common.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_peap.c"
 				>
@@ -302,6 +358,14 @@
 				RelativePath="..\..\..\src\eap_common\eap_peap_common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_psk.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_psk_common.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\eap_register.c"
 				>
@@ -351,15 +415,19 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\ip_addr.c"
+				RelativePath="..\..\..\src\common\hw_features_common.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\l2_packet\l2_packet_winpcap.c"
+				RelativePath="..\..\..\src\common\ieee802_11_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\ip_addr.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\md5.c"
+				RelativePath="..\..\..\src\l2_packet\l2_packet_winpcap.c"
 				>
 			</File>
 			<File
@@ -370,20 +438,24 @@
 				RelativePath="..\..\..\src\eap_peer\mschapv2.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\drivers\ndis_events.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\notify.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\os_win32.c"
+				RelativePath="..\..\op_classes.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\pcsc_funcs.c"
+				RelativePath="..\..\..\src\utils\os_win32.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\peerkey.c"
+				RelativePath="..\..\..\src\utils\pcsc_funcs.c"
 				>
 			</File>
 			<File
@@ -403,15 +475,19 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\scan.c"
+				RelativePath="..\..\..\src\crypto\random.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1.c"
+				RelativePath="..\..\robust_av.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-pbkdf2.c"
+				RelativePath="..\..\rrm.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\scan.c"
 				>
 			</File>
 			<File
@@ -422,14 +498,38 @@
 				RelativePath="..\..\..\src\crypto\sha1-tlsprf.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha1-tprf.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha256-prf.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha256-tlsprf.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\crypto\tls_openssl.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\tls_openssl_ocsp.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\tncc.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\twt.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\wmm_ac.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\rsn_supp\wpa.c"
 				>
diff --git a/wpa_supplicant/vs2005/win_if_list/win_if_list.vcproj b/wpa_supplicant/vs2005/win_if_list/win_if_list.vcproj
index e79fc0f..24e5630 100755
--- a/wpa_supplicant/vs2005/win_if_list/win_if_list.vcproj
+++ b/wpa_supplicant/vs2005/win_if_list/win_if_list.vcproj
@@ -40,7 +40,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="..\..\..\src\utils;C:\dev\WpdPack\include"
+				AdditionalIncludeDirectories="..\..\..\src\utils;..\..\..\..\WpdPack\include"
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -49,6 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
+				DisableSpecificWarnings="4244"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -63,7 +64,7 @@
 				Name="VCLinkerTool"
 				AdditionalDependencies="wpcap.lib"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				TargetMachine="1"
@@ -118,13 +119,14 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="..\..\..\src\utils;C:\dev\WpdPack\include"
+				AdditionalIncludeDirectories="..\..\..\src\utils;..\..\..\..\WpdPack\include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				RuntimeLibrary="2"
 				UsePrecompiledHeader="0"
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
+				DisableSpecificWarnings="4244"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -139,7 +141,7 @@
 				Name="VCLinkerTool"
 				AdditionalDependencies="wpcap.lib"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				OptimizeReferences="2"
diff --git a/wpa_supplicant/vs2005/wpa_cli/wpa_cli.vcproj b/wpa_supplicant/vs2005/wpa_cli/wpa_cli.vcproj
index d2de768..997b854 100755
--- a/wpa_supplicant/vs2005/wpa_cli/wpa_cli.vcproj
+++ b/wpa_supplicant/vs2005/wpa_cli/wpa_cli.vcproj
@@ -49,7 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
-				DisableSpecificWarnings="4244;4267"
+				DisableSpecificWarnings="4244;4267;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -125,7 +125,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
-				DisableSpecificWarnings="4244;4267"
+				DisableSpecificWarnings="4244;4267;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -180,10 +180,22 @@
 			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
+			<File
+				RelativePath="..\..\..\src\common\cli.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\utils\common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\utils\edit_simple.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\eloop_win.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\utils\os_win32.c"
 				>
@@ -196,6 +208,10 @@
 				RelativePath="..\..\..\src\common\wpa_ctrl.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\utils\wpa_debug.c"
+				>
+			</File>
 		</Filter>
 		<Filter
 			Name="Header Files"
diff --git a/wpa_supplicant/vs2005/wpa_passphrase/wpa_passphrase.vcproj b/wpa_supplicant/vs2005/wpa_passphrase/wpa_passphrase.vcproj
index 97aa2c5..8808892 100755
--- a/wpa_supplicant/vs2005/wpa_passphrase/wpa_passphrase.vcproj
+++ b/wpa_supplicant/vs2005/wpa_passphrase/wpa_passphrase.vcproj
@@ -40,7 +40,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="..\..\..\src;..\..\..\src\utils;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..\..\src;..\..\..\src\utils;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -49,7 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
-				DisableSpecificWarnings="4244;4267"
+				DisableSpecificWarnings="4244;4267;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -62,9 +62,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib"
+				AdditionalDependencies="ws2_32.lib Crypt32.lib libcrypto.lib"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories=""
+				AdditionalLibraryDirectories="..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				TargetMachine="1"
@@ -119,14 +119,14 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="..\..\..\src;..\..\..\src\utils;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..\..\src;..\..\..\src\utils;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				RuntimeLibrary="2"
 				UsePrecompiledHeader="0"
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
-				DisableSpecificWarnings="4244;4267"
+				DisableSpecificWarnings="4244;4267;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -139,8 +139,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="ws2_32.lib"
+				AdditionalDependencies="ws2_32.lib Crypt32.lib libcrypto.lib"
 				LinkIncremental="1"
+				AdditionalLibraryDirectories="..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				OptimizeReferences="2"
@@ -186,11 +187,7 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\md5.c"
-				>
-			</File>
-			<File
-				RelativePath="..\..\..\src\crypto\md5-internal.c"
+				RelativePath="..\..\..\src\crypto\crypto_openssl.c"
 				>
 			</File>
 			<File
@@ -198,23 +195,15 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1.c"
-				>
-			</File>
-			<File
-				RelativePath="..\..\..\src\crypto\sha1-internal.c"
+				RelativePath="..\..\..\src\utils\wpa_debug.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-prf.c"
-				>
-			</File>
-			<File
-				RelativePath="..\..\..\src\crypto\sha1-pbkdf2.c"
+				RelativePath="..\..\wpa_passphrase.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\wpa_passphrase.c"
+				RelativePath="..\..\..\src\utils\wpabuf.c"
 				>
 			</File>
 		</Filter>
diff --git a/wpa_supplicant/vs2005/wpa_supplicant/wpa_supplicant.vcproj b/wpa_supplicant/vs2005/wpa_supplicant/wpa_supplicant.vcproj
index 10c05b5..4eef3de 100755
--- a/wpa_supplicant/vs2005/wpa_supplicant/wpa_supplicant.vcproj
+++ b/wpa_supplicant/vs2005/wpa_supplicant/wpa_supplicant.vcproj
@@ -40,7 +40,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -49,7 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -62,9 +62,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				TargetMachine="1"
@@ -119,14 +119,14 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				RuntimeLibrary="2"
 				UsePrecompiledHeader="0"
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -139,9 +139,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				OptimizeReferences="2"
@@ -182,10 +182,6 @@
 			Filter="cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx"
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
-			<File
-				RelativePath="..\..\..\src\crypto\aes-cbc.c"
-				>
-			</File>
 			<File
 				RelativePath="..\..\..\src\crypto\aes-ctr.c"
 				>
@@ -203,25 +199,21 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-unwrap.c"
+				RelativePath="..\..\..\src\utils\base64.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-wrap.c"
+				RelativePath="..\..\..\src\utils\bitfield.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\base64.c"
+				RelativePath="..\..\bss.c"
 				>
 			</File>
 			<File
 				RelativePath="..\..\bssid_ignore.c"
 				>
 			</File>
-			<File
-				RelativePath="..\..\bss.c"
-				>
-			</File>
 			<File
 				RelativePath="..\..\..\src\eap_common\chap.c"
 				>
@@ -233,15 +225,51 @@
 			<File
 				RelativePath="..\..\..\src\utils\config.c"
 				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\config.c"
 				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\config_file.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\utils\crc32.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\crypto\crypto_openssl.c"
 				>
@@ -274,10 +302,26 @@
 				RelativePath="..\..\..\src\eap_peer\eap.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_aka.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_common\eap_common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_fast_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast_pac.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_gtc.c"
 				>
@@ -302,6 +346,14 @@
 				RelativePath="..\..\..\src\eap_peer\eap_otp.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_pax.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_pax_common.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_peap.c"
 				>
@@ -310,10 +362,26 @@
 				RelativePath="..\..\..\src\eap_common\eap_peap_common.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_psk.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_psk_common.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\eap_register.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_sim.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_sim_common.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_tls.c"
 				>
@@ -343,15 +411,27 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\l2_packet\l2_packet_winpcap.c"
+				RelativePath="..\..\..\src\crypto\fips_prf_openssl.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\main.c"
+				RelativePath="..\..\..\src\common\hw_features_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\common\ieee802_11_common.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\md5.c"
+				RelativePath="..\..\..\src\utils\ip_addr.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\l2_packet\l2_packet_winpcap.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\main.c"
 				>
 			</File>
 			<File
@@ -371,15 +451,15 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\os_win32.c"
+				RelativePath="..\..\op_classes.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\pcsc_funcs.c"
+				RelativePath="..\..\..\src\utils\os_win32.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\peerkey.c"
+				RelativePath="..\..\..\src\utils\pcsc_funcs.c"
 				>
 			</File>
 			<File
@@ -391,15 +471,19 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\scan.c"
+				RelativePath="..\..\..\src\crypto\random.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1.c"
+				RelativePath="..\..\robust_av.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-pbkdf2.c"
+				RelativePath="..\..\rrm.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\scan.c"
 				>
 			</File>
 			<File
@@ -410,14 +494,38 @@
 				RelativePath="..\..\..\src\crypto\sha1-tlsprf.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha1-tprf.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha256-prf.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\sha256-tlsprf.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\crypto\tls_openssl.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\crypto\tls_openssl_ocsp.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\tncc.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\twt.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\wmm_ac.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\rsn_supp\wpa.c"
 				>
diff --git a/wpa_supplicant/vs2005/wpasvc/wpasvc.vcproj b/wpa_supplicant/vs2005/wpasvc/wpasvc.vcproj
index 82d9033..4685e83 100755
--- a/wpa_supplicant/vs2005/wpasvc/wpasvc.vcproj
+++ b/wpa_supplicant/vs2005/wpasvc/wpasvc.vcproj
@@ -40,7 +40,7 @@
 			<Tool
 				Name="VCCLCompilerTool"
 				Optimization="0"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;_DEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -49,7 +49,7 @@
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="4"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -62,9 +62,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="2"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+				AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				TargetMachine="1"
@@ -119,14 +119,14 @@
 			/>
 			<Tool
 				Name="VCCLCompilerTool"
-				AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;C:\dev\WpdPack\include;C:\dev\openssl\include"
+                AdditionalIncludeDirectories="..\..;..\..\..\src;..\..\..\src\utils;..\..\..\..\WpdPack\include;..\..\..\..\openssl-1.1.1-x86\include"
 				PreprocessorDefinitions="WIN32;NDEBUG;_CONSOLE;CONFIG_WIN32_DEFAULTS"
 				RuntimeLibrary="2"
 				UsePrecompiledHeader="0"
 				WarningLevel="3"
 				Detect64BitPortabilityProblems="true"
 				DebugInformationFormat="3"
-				DisableSpecificWarnings="4244;4267;4311"
+				DisableSpecificWarnings="4244;4267;4311;4996"
 			/>
 			<Tool
 				Name="VCManagedResourceCompilerTool"
@@ -139,9 +139,9 @@
 			/>
 			<Tool
 				Name="VCLinkerTool"
-				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libeay32MT.lib ssleay32Mt.lib"
+				AdditionalDependencies="wbemuuid.lib ws2_32.lib Crypt32.lib Winscard.lib Packet.lib wpcap.lib libssl.lib libcrypto.lib"
 				LinkIncremental="1"
-				AdditionalLibraryDirectories="C:\dev\WpdPack\lib;C:\dev\openssl\lib"
+                AdditionalLibraryDirectories="..\..\..\..\WpdPack\lib;..\..\..\..\openssl-1.1.1-x86\lib"
 				GenerateDebugInformation="true"
 				SubSystem="1"
 				OptimizeReferences="2"
@@ -183,7 +183,15 @@
 			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
 			>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-cbc.c"
+				RelativePath="..\..\..\src\common\hw_features_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\common\ieee802_11_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\common\wpa_common.c"
 				>
 			</File>
 			<File
@@ -203,71 +211,91 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-unwrap.c"
+				RelativePath="..\..\..\src\crypto\crypto_openssl.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\aes-wrap.c"
+				RelativePath="..\..\..\src\crypto\fips_prf_openssl.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\base64.c"
+				RelativePath="..\..\..\src\crypto\ms_funcs.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\bssid_ignore.c"
+				RelativePath="..\..\..\src\crypto\random.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\bss.c"
+				RelativePath="..\..\..\src\crypto\sha1-prf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_common\chap.c"
+				RelativePath="..\..\..\src\crypto\sha1-tlsprf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\common.c"
+				RelativePath="..\..\..\src\crypto\sha1-tprf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\config.c"
+				RelativePath="..\..\..\src\crypto\sha256-prf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\config.c"
+				RelativePath="..\..\..\src\crypto\sha256-tlsprf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\config_winreg.c"
+				RelativePath="..\..\..\src\crypto\tls_openssl.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\crypto_openssl.c"
+				RelativePath="..\..\..\src\crypto\tls_openssl_ocsp.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\ctrl_iface.c"
+				RelativePath="..\..\..\src\drivers\driver_common.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\ctrl_iface_named_pipe.c"
+				RelativePath="..\..\..\src\drivers\driver_ndis.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\drivers\driver_common.c"
+				RelativePath="..\..\..\src\drivers\driver_ndis_.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\drivers\driver_ndis.c"
+				RelativePath="..\..\..\src\drivers\ndis_events.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\drivers\driver_ndis_.c"
+				RelativePath="..\..\..\src\eap_common\chap.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\drivers\drivers.c"
+				RelativePath="..\..\..\src\eap_common\eap_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_fast_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_pax_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_peap_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_psk_common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_common\eap_sim_common.c"
 				>
 			</File>
 			<File
@@ -275,7 +303,15 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_common\eap_common.c"
+				RelativePath="..\..\..\src\eap_peer\eap_aka.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_fast_pac.c"
 				>
 			</File>
 			<File
@@ -302,16 +338,20 @@
 				RelativePath="..\..\..\src\eap_peer\eap_otp.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\eap_peer\eap_pax.c"
+				>
+			</File>
 			<File
 				RelativePath="..\..\..\src\eap_peer\eap_peap.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_common\eap_peap_common.c"
+				RelativePath="..\..\..\src\eap_peer\eap_psk.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\eap_register.c"
+				RelativePath="..\..\..\src\eap_peer\eap_sim.c"
 				>
 			</File>
 			<File
@@ -331,15 +371,15 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eapol_supp\eapol_supp_sm.c"
+				RelativePath="..\..\..\src\eap_peer\mschapv2.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\eloop_win.c"
+				RelativePath="..\..\..\src\eap_peer\tncc.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\events.c"
+				RelativePath="..\..\..\src\eapol_supp\eapol_supp_sm.c"
 				>
 			</File>
 			<File
@@ -347,27 +387,63 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\main_winsvc.c"
+				RelativePath="..\..\..\src\rsn_supp\pmksa_cache.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\md5.c"
+				RelativePath="..\..\..\src\rsn_supp\preauth.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\ms_funcs.c"
+				RelativePath="..\..\..\src\rsn_supp\wpa.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_peer\mschapv2.c"
+				RelativePath="..\..\..\src\rsn_supp\wpa_ie.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\drivers\ndis_events.c"
+				RelativePath="..\..\..\src\utils\base64.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\notify.c"
+				RelativePath="..\..\..\src\utils\bitfield.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\common.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\config.c"
+				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___utils.obj"
+					/>
+				</FileConfiguration>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\crc32.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\eloop_win.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\..\src\utils\ip_addr.c"
 				>
 			</File>
 			<File
@@ -379,73 +455,105 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\peerkey.c"
+				RelativePath="..\..\..\src\utils\wpa_debug.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\pmksa_cache.c"
+				RelativePath="..\..\..\src\utils\wpabuf.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\preauth.c"
+				RelativePath="..\..\bss.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\scan.c"
+				RelativePath="..\..\bssid_ignore.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1.c"
+				RelativePath="..\..\config.c"
 				>
+				<FileConfiguration
+					Name="Debug|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
+				<FileConfiguration
+					Name="Release|Win32"
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+						ObjectFile="$(IntDir)\config___wpasup.obj"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-pbkdf2.c"
+				RelativePath="..\..\ctrl_iface.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-prf.c"
+				RelativePath="..\..\ctrl_iface_named_pipe.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\sha1-tlsprf.c"
+				RelativePath="..\..\eap_register.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\crypto\tls_openssl.c"
+				RelativePath="..\..\events.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\eap_peer\tncc.c"
+				RelativePath="..\..\notify.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\wpa.c"
+				RelativePath="..\..\op_classes.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\common\wpa_common.c"
+				RelativePath="..\..\robust_av.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\wpa_debug.c"
+				RelativePath="..\..\rrm.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\rsn_supp\wpa_ie.c"
+				RelativePath="..\..\scan.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\wpa_supplicant.c"
+				RelativePath="..\..\twt.c"
 				>
 			</File>
 			<File
-				RelativePath="..\..\..\src\utils\wpabuf.c"
+				RelativePath="..\..\wmm_ac.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\wpa_supplicant.c"
 				>
 			</File>
 			<File
 				RelativePath="..\..\wpas_glue.c"
 				>
 			</File>
+			<File
+				RelativePath="..\..\..\src\drivers\drivers.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\config_winreg.c"
+				>
+			</File>
+			<File
+				RelativePath="..\..\main_winsvc.c"
+				>
+			</File>
 		</Filter>
 		<Filter
 			Name="Header Files"
diff --git a/wpa_supplicant/win_if_list.c b/wpa_supplicant/win_if_list.c
index 39634d9..3191c5c 100644
--- a/wpa_supplicant/win_if_list.c
+++ b/wpa_supplicant/win_if_list.c
@@ -16,7 +16,7 @@
 #include <ntddndis.h>
 #else /* CONFIG_USE_NDISUIO */
 #include "pcap.h"
-#include <winsock.h>
+#include <winsock2.h>
 #endif /* CONFIG_USE_NDISUIO */
 
 #ifdef CONFIG_USE_NDISUIO
diff --git a/wpa_supplicant/wpa_cli.c b/wpa_supplicant/wpa_cli.c
index 033589f..47a4a20 100644
--- a/wpa_supplicant/wpa_cli.c
+++ b/wpa_supplicant/wpa_cli.c
@@ -4340,12 +4340,12 @@ static void wpa_cli_action_process(const char *msg)
 }
 
 
-#ifndef CONFIG_ANSI_C_EXTRA
+/*#ifndef CONFIG_ANSI_C_EXTRA*/
 static void wpa_cli_action_cb(char *msg, size_t len)
 {
 	wpa_cli_action_process(msg);
 }
-#endif /* CONFIG_ANSI_C_EXTRA */
+/*#endif*/ /* CONFIG_ANSI_C_EXTRA */
 
 
 static int wpa_cli_open_global_ctrl(void)
diff --git a/wpa_supplicant/wpa_gui-qt4/addinterface.cpp b/wpa_supplicant/wpa_gui-qt4/addinterface.cpp
index 7d92f63..b577d76 100644
--- a/wpa_supplicant/wpa_gui-qt4/addinterface.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/addinterface.cpp
@@ -14,6 +14,11 @@
 #include "wpagui.h"
 #include "addinterface.h"
 
+#if defined(_MSC_VER) && (_MSC_VER < 1900)
+#undef snprintf
+#define snprintf _snprintf
+#endif
+
 #ifdef CONFIG_NATIVE_WINDOWS
 #include <windows.h>
 
@@ -148,7 +153,7 @@ bool AddInterface::addRegistryInterface(const QString &ifname)
 #ifdef UNICODE
 	wsprintf(name, L"%04d", id);
 #else /* UNICODE */
-	os_snprintf(name, sizeof(name), "%04d", id);
+	snprintf(name, sizeof(name), "%04d", id);
 #endif /* UNICODE */
 	ret = RegCreateKeyEx(hk, name, 0, NULL, 0, KEY_WRITE, NULL, &ihk,
 			     NULL);
@@ -163,7 +168,7 @@ bool AddInterface::addRegistryInterface(const QString &ifname)
 
 #else /* UNICODE */
 	RegSetValueEx(ihk, TEXT("adapter"), 0, REG_SZ,
-		      (LPBYTE) ifname.toLocal8Bit(), ifname.length() + 1);
+		      (LPBYTE) ifname.toLocal8Bit().constData(), ifname.length() + 1);
 #endif /* UNICODE */
 	RegSetValueEx(ihk, TEXT("config"), 0, REG_SZ,
 		      (LPBYTE) TEXT("default"), 8 * sizeof(TCHAR));
diff --git a/wpa_supplicant/wpa_gui-qt4/icons/ap.png b/wpa_supplicant/wpa_gui-qt4/icons/ap.png
new file mode 100644
index 0000000000000000000000000000000000000000..9607c3056a96289080c2fb340fda70feb11608f4
GIT binary patch
literal 189
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnF3?v&v(vJfvp#Yx{S0D`n{}~z@8V(#d@c;k+
zlWDg_fFg_~L4Lsu4$p3+0XdPLE{-7@!N~~@Ol&+W8X_xLI3$!AH|*dRGHBqk*ww)x
zIEkT)OE`rwJ&7fthe5JQF`<VopqD{1=~0hPK9i7uh)5V8pP7-VsfdWl!DUQ$dD4<a
c5*i)`F|19n;owYOaSP-KPgg&ebxsLQ0F0P2;s5{u

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/group.png b/wpa_supplicant/wpa_gui-qt4/icons/group.png
new file mode 100644
index 0000000000000000000000000000000000000000..83b1f1deea4c4f55cb56721910fcc80bdb8b779e
GIT binary patch
literal 205
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnF3?v&v(vJfv{s5m4S0D`r4M1?<zyTMvIU9g{
z#*!evU<QY0H`0Kd98VX=5RLPDCmiH$FyL_YoUx#g`4NNfK4FjV^G_;e1?tK5y#MiQ
zAwyu(#m=P6xl*kiXXbZ5*U#kZKEe>mAnI42n0;}JWmRWr*%uv00hcfdR{#B-hATNA
s=y_=-TFTqq?d)ecG;z+as3mgEyz5UGFInBSsvP7fPgg&ebxsLQ04Ekj{Qv*}

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/invitation.png b/wpa_supplicant/wpa_gui-qt4/icons/invitation.png
new file mode 100644
index 0000000000000000000000000000000000000000..d79d100402650fb89cf4f9de542a254ec253a376
GIT binary patch
literal 209
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnH3?%tPCZz)@o&cW^S0D`n4GjPP|8Lp2Pz=as
zED7=pW^j0RBMrzY_H=O!kqGZSzfrJ3frm99=Z*vSvO<pK2~u3{3myg=F#R@QV)bAu
zipZ3@7u)yS-s#Wmw>j?@y*YTJv3nuIY3Uy<x7KQ~&U#Rk;4!_%gr($)zum32hQ2!w
zFE#&YbCESpUMiX%xNBZE$5V^MRaU3^i|wAX9WV3nV)I+F1LQDIS3j3^P6<r_^KD58

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/laptop.png b/wpa_supplicant/wpa_gui-qt4/icons/laptop.png
new file mode 100644
index 0000000000000000000000000000000000000000..6137d8b440c8f78dd0fdf6a18a3eaa00d2b24de0
GIT binary patch
literal 248
zcmeAS@N?(olHy`uVBq!ia0vp^3LwnF3?v&v(vJfvp#Yx{S0D`r4GjzpKycu|f$ZSy
zi$Ed9k|4ie28U-i(tw;Po-U3d8o{L(FY>ww3bZC#ZRosxK*j0?n~I3TyO;Z?no7L8
z5tDyk{v3C5T%T?2&cgu*<4i?z7ZuI;Han5aZ}zng`FqORCpwPv7$t3PQCj#)L77pW
zb4K4Y!%I9n4=KN~_Wrolx^8I&&-$d#Mh`4HET_~ZTc|4Rv^%7FUsI_!^tRXTeRsU8
m_t~C4yjP?6qFMd?-*t83s|?f(UJD-px!=>(&t;ucLK6VZdt7t?

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/status/0.png b/wpa_supplicant/wpa_gui-qt4/icons/status/0.png
new file mode 100644
index 0000000000000000000000000000000000000000..d1953c13643c327d1e64e4a8e762a66b7f470b07
GIT binary patch
literal 129
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9JOMr-u8B!GKqkX~hBIf*JTgpb
z2eKJUg8YIR9G=}s19Fr-T^vI=qDzk`GBOzOuxy-BWBI&xMFC@@<8`O&UF$-BZO!GM
WcuUkgwNrT_$RJNwKbLh*2~7anMI{*k

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/status/1.png b/wpa_supplicant/wpa_gui-qt4/icons/status/1.png
new file mode 100644
index 0000000000000000000000000000000000000000..7a690e7079d761f2fa8424a072cfe30f9e3bb473
GIT binary patch
literal 130
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9JOMr-t`FVU0htW{8P1$J!&&|z
z56EUL3GxeOaCmkj4aiaPba4#fxSpJlkify3)D|Tn$fcB(=%UfFqE&FAf|9VfAQuZm
XSDwh_DQi9+2btvQ>gTe~DWM4fy>B9I

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/status/2.png b/wpa_supplicant/wpa_gui-qt4/icons/status/2.png
new file mode 100644
index 0000000000000000000000000000000000000000..7abdc9536732b681bbb13f4eaf83785ea0fea67d
GIT binary patch
literal 130
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9JOMr-uBp1|KqkX~hBIf*#H9PH
z0ojZtL4Lsu4$p3+0XZt3E{-7_*OL<x5;$0s+M*-`xs<XJT{JpQv<NO#P!bjw<YHl{
WsuMBRi}}C~GRf1`&t;ucLK6Tb(H`;u

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/status/3.png b/wpa_supplicant/wpa_gui-qt4/icons/status/3.png
new file mode 100644
index 0000000000000000000000000000000000000000..7af7a58b27611fe01ed717191e47131215aec9ce
GIT binary patch
literal 130
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9JOMr-t_-O_76Ze7hBIf*Y*yPm
z7szHT3GxeOaCmkj4aiaPba4#fxSpJlkify3)D|Tn$fabI=%UeaqD63_f|9VfAQuZm
X+&|&)`haa9vl%>H{an^LB{Ts5JPIGB

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/status/4.png b/wpa_supplicant/wpa_gui-qt4/icons/status/4.png
new file mode 100644
index 0000000000000000000000000000000000000000..7b9369085662530603dd9a38a49fdcd039c952bb
GIT binary patch
literal 127
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9oB=)|u8B!GKqkX~hSqilCLn{c
zB*-tA!Qt7BG$2RC)5S4_Bf9j6A|rzV56i|GHG<FY9|(BJ#MHd5b)9JJ>Mz;1<xCz4
U+0U5cSO_x4)78&qol`;+0Oq42J^%m!

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.ico b/wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.ico
new file mode 100644
index 0000000000000000000000000000000000000000..22f580e1a3d1b11f946c0e5823f43c510ff5580c
GIT binary patch
literal 34494
zcmeI5O^#hj5rwm5ki`Ug*dy8lkb2mX7l4HjOJK~%VuFxZK@EEaNZtXfK(zobqE>(y
zGC(TsSLIVW3L^67zI*FYc87Ew`4e&CoXC8yeq467_Er07`}*s)`8VxPKWXg`t+j8y
zd7S_7v)2Bxt-X2kIRE<=_xqo>_Wk#t=D%+3pTBJF-Mh#6cfW1zZ@+8pyA5Lt-4Gww
zH`m&RQ`ybU&Hc*bIOJ{frRP&l%W_xNV(k596_>b2uIKx{ulqR0XwTPuEH1vLF}X2c
zd&+aKJ^4{SahNbPmOndRb>&r8KC4fx_LUdcwD0*@%mdJ;KZK=R<}p8FC`aCNt9)U2
zZH<K^PyKD&KKZ9}(tgh?mwb%*%JZ1j+U=_?_bbijJvrp^KC``5we9Vw@&5H-+j~~D
zKmYYFP0xo9AMTHMgy$aIt@a@gSZ862qiP(<TiEhoUkm^J`}g-BKYqM_`}S>lCW^s}
zv-^ra@v@#i_GDR&41X3|JkcnNH8Om~k|zv$<b8^B)$km0BffJNp4L299K@GcnbtCV
z@t`jIo~JeC2~RxO$DBvxuN-m6a=_<_T%;2W#Z>s>Bn;J4ee#7TzOHpIK3Kww_?q|l
zN4_il$zo%FVvK8sm*UkYeC#DLReu~$J@+-ob!_jA>QO^{R8MQd@mMevuiC_WedjK$
zxW>B9fjZefG0GPgoxAq5U*&rZ)ghKA?q%2`eC>;0<tu*5=i_8AhB);eo;<|+84wd6
zV$S*)9I;i0^&=kP;qTh(cH3UHo9(ltqYNxC!RGU@H{0`Wd!9ZI;|suG&Pn4Vv}PE>
zue@?LivM%&N301ytIysMHD)lV<s6=~w)i=RYu3L;ZSTPu_5I_EYGt0<qx!rb%4Tpq
ze&)TjSKqPVFv3G4cy7I%p8i<7`dF6rl~}imLsj2D_JgxhTYMsi?Ch%g-oscMoJ<dE
zv4(R1Q{3dU`cb=MIxpu?t@p6tkktoQ=GuLoeR5rga`4X0d*JI;{VLwqy|y^`K4Yyr
zZ(pzKyAJi<`{)>~D+W9_tyj4-^)n69?zpPOp3Hl#HM}q{t?zwRt)uHpm)G+CQ&0Us
z4|_6k@;-TPr9Z<U)=k)~>v4|6X6rNc9mnInx8So!ERS<$Z`2cUi~Z9&7&4s!d$EpU
z+&gFQJu$+Uuj;#2$0N`8ye?z*gpGH;aZgy;I(u%B1G?xtxjc-$Pq8*wti?z9ah*As
zZg7Y-vOHp3HyB`LvAy~k2e817dex6uw^tkdQT>VoxHDGiRxhZ}*8zB~Ri2nxo5j=D
zAT#meg(l*?*Nk;8iW_+_RDZSyBh1<TSX(?;=b6P>jT64=RbFvN`>fu-Tl@B|wb!?;
zy}H@HRlw6uGU4BDweGf>)aLsX{9Vx>x992m6u;Ug!7}c?c66^+@tn)bSamkJr`@|5
zZ1I@ouJ{@3=Zq1ro({!4C$E)S;+JXA-U{9|V#PCRVEr0=_SA%{^M6U)rPnpQWd1La
zyPv_A$e+*4(akgSwS)Q<J)d*xbId(B;t+9rb81HG#aDaqjW+taAY!fZCqA=1z03Ll
z_KJoT{#89{#=gwX$<1t5!z};otf|Z0-P3#NBNvR!W^iZuXZX|=k4t@}VT3!wpO|Pz
zau>%;1GTlE`4Ru>-ehOXogLw^56|p=uhf#3nR>DJS#5CKn5%|->~9tWcC;)`nC$iT
zBUW~AvYO<nhJ3_gp7kQ?Bu*I7_xNY$8S7;+)XQ{cyoil=G3!T+k&YgJ_M$0IKI4>e
zUyYA-t2@%;AGt+dS?^<vc)O3daE<+qF%|9#|JZ|>b0%iy&czsNx$WWa`HUm~Q4Q~5
ztiOs)yq}@QaEQFL7i+{GIX_~ZV|KUvj`VV=AA1A7c)4HUA9ap6P}9xpj&hISA8SPZ
zqZ*u-ES{a#<ww|Xas3*T7jv~2`9}=rSMd;*`%HJ#H>xeX9{;S4-(fH^i(FI-pJ@ie
zW3tyy)#D!j3@37{_<-wL8E5@~d&JD*9Lu%#_!Ac`-XUV*S;w5-d=}3+`*_4Z>ji6$
zu~!4!V_#?Mss4yR_?gAJs~WPtuhg35Ph8fMtUj^aW%ep#FWz@?$?~$ZR=l{4Vu;JI
zS<B9Wc-G<RPcOE@cdprZbbpjnoh^N?`l;NWC%3Xnuj9?~C#P4dcNShxW4L8KmzLR{
ztneRcpf;SqgrE0MbM|_?!I<R^pH=?kz~wA+%{r@|hd+N0gYU(~J?f15xS|oPz1;Wk
zmmbdg5*_5O+!xiwtM~eQu+=kgEP6-&j22>uUG2Bmi`;bvmuPT&xY1XCF5&CgaLo80
zt-)&^HSTfudvw$}9K{=)8Sc{X|8y3syj_Fq5YBV^$S2Nu<L4)2{)7KbYyZOkqHX`y
zX|vbczdgrq|NdP5hWYlBO!7>>WV=DU_2ZVg_3MuL)<^YKeOBN3IjwiwbF)29Kc~e)
zuy}6O{JHPfrS&QutLvBYxOV=kUd20aK3?*1@~DrM+ZE)Rp7Mw%oLz%-&3NTW_gP%e
z#-$hDhgI!o^LsA**&gWJU&1|K?H!t=FS`fYqgSigFD1Tr577TPYu6d62Yv^1_MhXu
zmu~s&b?~K}y?Wqx;7dAt>GwPEqyGBuD%G#g(d*phkI=}yI_o_YTwb?FeT<TB`AhV}
z&A&&;_{ct>+3g5?>6YKCKXMaKIPS%adBTkTlDi<?^0DU3oZOzxV2on8M?Kry1L>9@
z@re7?xr^&_oWE-A>49|1M}58dNISgtaH?vaQBS(%tJ-mWbRUn_uKF`QSb5KtZh6%i
zdG2*(N4zih>Z5N|znAZO(k<_M)wp*CXKQy(y&lZI?xb7Z@w4&h-ml!f41Z<q2rkks
zKdMh$WxbxWr}F}%SI6%+IV0SP&!`R@q+7nni@nO=S>=KqtrxF8c}`DDhOgX;lh&nM
zUhA3X94gD=S?h7jUMsyCU}bfBuY=y*5kG0K@KrNA7y41<^|X+;s-K)n4;(V<-LqBw
z89r;7j^3G&)8ke3nLJGA;l5YT<Ko!QzB)&8s<W(gRObPIa<ZO@8+*MTR6MJk>dsJa
zR)3|Z;)2f1s(wkk`$`YE9;fjtNAhO%S6s5*R(A#7y>pii`QDvgsoU%MrTQ~HE9XEy
zT6m7YqQ}vW&>t~1*IBu*?n>0hJlaeQIhCe}r@8a<@$C5vCwj-yIL2tMefg|UnJ(o=
zFC6zVMsttx@ip~}TlCJ4ab+=XHJ12m>d(#}KCUZ!ji?_Ur?K{;*M9V~`ZKQ7h_6@h
ztJwISO|Hi>j(Fr`Mr_nl^(u>1?xp&pCUC*btl|Ohs9XHV$t>Oz;#Ybl{8{~#ri@2*
z4(Q1GB`(oddcev0wZc)gX7yKGsxz(5ZMFwhJ@Qv;_If_6pMF)Aokfp7IMmJZSgX!a
z^)o%>Ri?Af{EGhSOu@*ot9a*0j6c4Yjfu@_RXwZXg|VW)cc#@@W*RP8TdkAb6=}z>
z=qJ9is?WW9Sz%S{nRYl)yE50BjaT(o_l){gui@R}SaH`nxs~?borG(q+1FO}liRb3
zCwaZzRhT^u)ase*tj2rv_j(SWUJu|we(yf8SKTG)7-=8n3uljha(nz|dZ7B~@JH)C
zKhh4jUcT?`)j#4u4`$E6`HaS3jtp)i9PRJbPyS2~IExiN;uSp@qdP}mR%>0NAC5EU
z0k6G%nAJ^<J@@TW{VP3yBSuZQqRr1sbM}Z?u|3-19`!q)cn5oP@~&l<a6U>uy@AKf
zYxJl-?R`z@9N{bd{2Vyrz4u6%crebkqj;iOKLf8`?7dIk1IFMTZD7Vad*<=%y$471
z);WQ9$?JmLGdTI#yMES>uBU#e?`YDaJEA%Dd5*e=sx6N;)sSxY+B>VhcwED)|7dj0
zajYJkbq}tgeRS@<9=znc0QXhx>V@tB9t^NvLNCPAb&u}6G-uxX@Dj(FrafyfP5Z3I
z``hgusl9sm!4lq^9{wMJ?SE|8e%A~3?Zf{su>H>scMsFX@14P3-9EU7-$BEO-$R3)
o_Pb~v;eY(|=CK7&{l0yiKb^<j<NUSGP3Nd{<&((G?se|}1vX%&-v9sr

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.png b/wpa_supplicant/wpa_gui-qt4/icons/wpa_gui.png
new file mode 100644
index 0000000000000000000000000000000000000000..581b584efead152d8bb541f3fa33c3c9555ae513
GIT binary patch
literal 161
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!93?!50ihlx9JOMr-u0R?H8X6k@|Nmbe!Tc4-
zVJr#q3ubV5b|VeQarSg^4B?PXeh{@ai?KN?BZKAem0$Z4d4kuswHx~M|F7yz%*)J?
zJbY*MLx)GdN+lSdHK{CfUl!M_F>jWXB%2{aiU>oXgQ9(=OyXXUO`fiPF6*2UngIPT
BGMoSa

literal 0
HcmV?d00001

diff --git a/wpa_supplicant/wpa_gui-qt4/icons_png.qrc b/wpa_supplicant/wpa_gui-qt4/icons_png.qrc
index 9a30b7f..6f952bb 100644
--- a/wpa_supplicant/wpa_gui-qt4/icons_png.qrc
+++ b/wpa_supplicant/wpa_gui-qt4/icons_png.qrc
@@ -1,9 +1,9 @@
 <RCC>
  <qresource prefix="/icons" >
-  <file alias="wpa_gui.png">icons/hicolor/16x16/apps/wpa_gui.png</file>
-  <file alias="ap.png">icons/hicolor/32x32/apps/ap.png</file>
-  <file alias="laptop.png">icons/hicolor/32x32/apps/laptop.png</file>
-  <file alias="group.png">icons/hicolor/32x32/apps/group.png</file>
-  <file alias="invitation.png">icons/hicolor/32x32/apps/invitation.png</file>
+  <file alias="wpa_gui.png">icons/wpa_gui.png</file>
+  <file alias="ap.png">icons/ap.png</file>
+  <file alias="laptop.png">icons/laptop.png</file>
+  <file alias="group.png">icons/group.png</file>
+  <file alias="invitation.png">icons/invitation.png</file>
  </qresource>
 </RCC>
diff --git a/wpa_supplicant/wpa_gui-qt4/icons_status.qrc b/wpa_supplicant/wpa_gui-qt4/icons_status.qrc
new file mode 100644
index 0000000..8e83891
--- /dev/null
+++ b/wpa_supplicant/wpa_gui-qt4/icons_status.qrc
@@ -0,0 +1,12 @@
+<RCC>
+ <qresource prefix="/icons/status" >
+  <file alias="network-wireless-offline.png">icons/wpa_gui.png</file>
+  <file alias="network-wireless-acquiring.png">icons/wpa_gui.png</file>
+  <file alias="network-wireless-connected.png">icons/wpa_gui.png</file>
+  <file alias="network-wireless-signal-none.png">icons/status/0.png</file>
+  <file alias="network-wireless-signal-weak.png">icons/status/1.png</file>
+  <file alias="network-wireless-signal-ok.png">icons/status/2.png</file>
+  <file alias="network-wireless-signal-good.png">icons/status/3.png</file>
+  <file alias="network-wireless-signal-excellent.png">icons/status/4.png</file>
+ </qresource>
+</RCC>
diff --git a/wpa_supplicant/wpa_gui-qt4/main.cpp b/wpa_supplicant/wpa_gui-qt4/main.cpp
index bbd45c6..62baf93 100644
--- a/wpa_supplicant/wpa_gui-qt4/main.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/main.cpp
@@ -7,7 +7,8 @@
  */
 
 #ifdef CONFIG_NATIVE_WINDOWS
-#include <winsock.h>
+#include <winsock2.h>
+#include <windows.h>
 #endif /* CONFIG_NATIVE_WINDOWS */
 #include <QApplication>
 #include <QtCore/QLibraryInfo>
@@ -30,6 +31,15 @@ void WpaGuiApp::saveState(QSessionManager &manager)
 }
 #endif
 
+#if defined(CONFIG_NATIVE_WINDOWS) && QT_VERSION < 0x050000
+bool WpaGuiApp::winEventFilter(MSG *message, long *result)
+{
+	if (message && message->message == WM_QUERYENDSESSION)
+		QMetaObject::invokeMethod(this, "quit", Qt::QueuedConnection);
+	return QApplication::winEventFilter(message, result);
+}
+#endif
+
 
 int main(int argc, char *argv[])
 {
diff --git a/wpa_supplicant/wpa_gui-qt4/networkconfig.cpp b/wpa_supplicant/wpa_gui-qt4/networkconfig.cpp
index 2727318..3637802 100644
--- a/wpa_supplicant/wpa_gui-qt4/networkconfig.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/networkconfig.cpp
@@ -12,6 +12,11 @@
 #include "networkconfig.h"
 #include "wpagui.h"
 
+#if defined(_MSC_VER) && (_MSC_VER < 1900)
+#undef snprintf
+#define snprintf _snprintf
+#endif
+
 enum {
 	AUTH_NONE_OPEN,
 	AUTH_NONE_WEP,
diff --git a/wpa_supplicant/wpa_gui-qt4/peers.cpp b/wpa_supplicant/wpa_gui-qt4/peers.cpp
index 0a0b3ff..cf231f4 100644
--- a/wpa_supplicant/wpa_gui-qt4/peers.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/peers.cpp
@@ -15,6 +15,11 @@
 #include "stringquery.h"
 #include "peers.h"
 
+#if defined(_MSC_VER) && (_MSC_VER < 1900)
+#undef snprintf
+#define snprintf _snprintf
+#endif
+
 
 enum {
 	peer_role_address = Qt::UserRole + 1,
diff --git a/wpa_supplicant/wpa_gui-qt4/scanresults.cpp b/wpa_supplicant/wpa_gui-qt4/scanresults.cpp
index a2e3072..7f2d76a 100644
--- a/wpa_supplicant/wpa_gui-qt4/scanresults.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/scanresults.cpp
@@ -14,6 +14,11 @@
 #include "networkconfig.h"
 #include "scanresultsitem.h"
 
+#if defined(_MSC_VER) && (_MSC_VER < 1900)
+#undef snprintf
+#define snprintf _snprintf
+#endif
+
 
 ScanResults::ScanResults(QWidget *parent, const char *, bool, Qt::WindowFlags)
 	: QDialog(parent)
diff --git a/wpa_supplicant/wpa_gui-qt4/wpa_gui.pro b/wpa_supplicant/wpa_gui-qt4/wpa_gui.pro
index 3fa734b..d04a033 100644
--- a/wpa_supplicant/wpa_gui-qt4/wpa_gui.pro
+++ b/wpa_supplicant/wpa_gui-qt4/wpa_gui.pro
@@ -8,22 +8,21 @@ CONFIG	+= qt warn_on release
 DEFINES += CONFIG_CTRL_IFACE
 
 win32 {
-  LIBS += -lws2_32 -static
-  DEFINES += CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
+  LIBS += -lws2_32 -lcrypt32 -lgdi32 -ladvapi32 -luser32 -static
+  DEFINES += NOMINMAX CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
   SOURCES += ../../src/utils/os_win32.c
+  RC_FILE = wpa_gui.rc
 } else:win32-g++ {
   # cross compilation to win32
-  LIBS += -lws2_32 -static -mwindows
-  DEFINES += CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
+  LIBS += -lws2_32 -lcrypt32 -lgdi32 -ladvapi32 -luser32 -static -mwindows
+  DEFINES += NOMINMAX CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
   SOURCES += ../../src/utils/os_win32.c
-  RESOURCES += icons_png.qrc
 } else:win32-x-g++ {
   # cross compilation to win32
-  LIBS += -lws2_32 -static -mwindows
-  DEFINES += CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
+  LIBS += -lws2_32 -lcrypt32 -lgdi32 -ladvapi32 -luser32 -static -mwindows
+  DEFINES += NOMINMAX CONFIG_NATIVE_WINDOWS CONFIG_CTRL_IFACE_NAMED_PIPE
   DEFINES += _X86_
   SOURCES += ../../src/utils/os_win32.c
-  RESOURCES += icons_png.qrc
 } else {
   DEFINES += CONFIG_CTRL_IFACE_UNIX
   SOURCES += ../../src/utils/os_unix.c
@@ -56,7 +55,7 @@ SOURCES	+= main.cpp \
 	stringquery.cpp \
 	../../src/common/wpa_ctrl.c
 
-RESOURCES += icons.qrc
+RESOURCES += icons.qrc icons_png.qrc icons_status.qrc
 
 FORMS	= wpagui.ui \
 	eventhistory.ui \
diff --git a/wpa_supplicant/wpa_gui-qt4/wpa_gui.rc b/wpa_supplicant/wpa_gui-qt4/wpa_gui.rc
new file mode 100644
index 0000000..ac9308c
--- /dev/null
+++ b/wpa_supplicant/wpa_gui-qt4/wpa_gui.rc
@@ -0,0 +1 @@
+IDI_ICON1 ICON DISCARDABLE icons/wpa_gui.ico
diff --git a/wpa_supplicant/wpa_gui-qt4/wpagui.cpp b/wpa_supplicant/wpa_gui-qt4/wpagui.cpp
index 9404ab4..ef2a947 100644
--- a/wpa_supplicant/wpa_gui-qt4/wpagui.cpp
+++ b/wpa_supplicant/wpa_gui-qt4/wpagui.cpp
@@ -11,21 +11,31 @@
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 #include <cstdio>
-#include <unistd.h>
-#include <chrono>
-#include <thread>
 #include <QMessageBox>
 #include <QCloseEvent>
 #include <QImageReader>
 #include <QSettings>
+#include <QThread>
+#include <QDir>
+#include <QFileInfo>
+#include <QDebug>
+#include <QMap>
 
 #include "wpagui.h"
+#ifdef CONFIG_CTRL_IFACE_UNIX
 #include "dirent.h"
+#endif
 #include "common/wpa_ctrl.h"
 #include "userdatarequest.h"
 #include "networkconfig.h"
 
 
+#if defined(_MSC_VER) && (_MSC_VER < 1900)
+#undef snprintf
+#define snprintf _snprintf
+#endif
+
+
 #ifndef QT_NO_DEBUG
 #define debug(M, ...) qDebug("DEBUG %d: " M, __LINE__, ##__VA_ARGS__)
 #else
@@ -33,6 +43,17 @@
 #endif
 
 
+namespace {
+
+class ThreadSleep: public QThread
+{
+public:
+	static void msleep(int ms) { QThread::msleep(ms); }
+};
+
+}
+
+
 WpaGui::WpaGui(QApplication *_app, QWidget *parent, const char *,
 	       Qt::WindowFlags)
 	: QMainWindow(parent), app(_app)
@@ -62,6 +83,23 @@ WpaGui::WpaGui(QApplication *_app, QWidget *parent, const char *,
 
 	connect(addInterfaceAction, SIGNAL(triggered()), this,
 		SLOT(addInterface()));
+
+	fileRemoveFromStartupAction = new QAction(this);
+	fileRemoveFromStartupAction->setObjectName("Remove From Startup");
+	fileRemoveFromStartupAction->setIconText(tr("Remove From Startup"));
+	fileMenu->insertAction(fileExitAction, fileRemoveFromStartupAction);
+
+	fileAddToStartupAction = new QAction(this);
+	fileAddToStartupAction->setObjectName("Add To Startup");
+	fileAddToStartupAction->setIconText(tr("Add To Startup"));
+	fileMenu->insertAction(fileRemoveFromStartupAction, fileAddToStartupAction);
+
+	fileMenu->insertSeparator(fileExitAction);
+
+	connect(fileAddToStartupAction, SIGNAL(triggered()), this,
+		SLOT(addToStartup()));
+	connect(fileRemoveFromStartupAction, SIGNAL(triggered()), this,
+		SLOT(removeFromStartup()));
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 	(void) statusBar();
@@ -240,23 +278,43 @@ void WpaGui::languageChange()
 
 void WpaGui::parse_argv()
 {
-	int c;
-	WpaGuiApp *app = qobject_cast<WpaGuiApp*>(qApp);
-	for (;;) {
-		c = getopt(app->argc, app->argv, "i:m:p:tq");
-		if (c < 0)
-			break;
+	const QStringList originalArgs = qApp->arguments();
+	QMap<char, QString> args;
+	for (QStringList::ConstIterator it = originalArgs.constBegin() + 1; it != originalArgs.constEnd(); ++it) {
+		QString::ConstIterator cit = it->constBegin();
+		char c = cit->toLatin1();
+		if (c != '-' && c != '/') {
+			qWarning() << "Invalid argument" << (*it);
+			continue;
+		}
+		for (++cit; cit != it->constEnd() && cit->toLatin1() != '\0'; ++cit) {
+			c = cit->toLatin1();
+			if (c == 'i' || c == 'm' || c == 'p') {
+				if (it + 1 == originalArgs.constEnd() || !(cit + 1 == it->constEnd() || (cit + 1)->toLatin1() == '\0')) {
+					qWarning() << "No option for switch " << c << "from" << (*it);
+					continue;
+				}
+				++it;
+				args.insert(c, *it);
+			} else {
+				args.insert(c, QString());
+			}
+		}
+	}
+	for (QMap<char, QString>::ConstIterator it = args.constBegin() + 1; it != args.constEnd(); ++it) {
+		const char c = it.key();
+		const QString optarg = it.value();
 		switch (c) {
 		case 'i':
 			free(ctrl_iface);
-			ctrl_iface = strdup(optarg);
+			ctrl_iface = strdup(optarg.toLocal8Bit().data());
 			break;
 		case 'm':
-			signalMeterInterval = atoi(optarg) * 1000;
+			signalMeterInterval = atoi(optarg.toLocal8Bit().data()) * 1000;
 			break;
 		case 'p':
 			free(ctrl_iface_dir);
-			ctrl_iface_dir = strdup(optarg);
+			ctrl_iface_dir = strdup(optarg.toLocal8Bit().data());
 			break;
 		case 't':
 			startInTray = true;
@@ -720,7 +778,7 @@ void WpaGui::updateNetworks()
 			continue;
 
 		/* avoid race conditions */
-		std::this_thread::sleep_for(std::chrono::milliseconds(200));
+		ThreadSleep::msleep(200);
 		QString cmd("LIST_NETWORKS LAST_ID=");
 		cmd.append(id);
 		if (ctrlRequest(cmd.toLocal8Bit().constData(), buf, &len) < 0)
@@ -1375,6 +1433,7 @@ void WpaGui::createTrayIcon(bool trayOnly)
 	QApplication::setQuitOnLastWindowClosed(false);
 
 	tray_icon = new QSystemTrayIcon(this);
+	currentIconType = TrayIconConnected;
 	updateTrayIcon(TrayIconOffline);
 
 	connect(tray_icon,
@@ -1577,7 +1636,21 @@ QIcon WpaGui::loadThemedIcon(const QStringList &names,
 
 	for (QStringList::ConstIterator it = names.begin();
 	     it != names.end(); it++) {
+#if QT_VERSION > 0x040600
 		icon = QIcon::fromTheme(*it);
+#else
+		if (QDir::isAbsolutePath(*it) && QFileInfo(*it).exists())
+			icon = QIcon(*it);
+#endif
+		if (!icon.isNull())
+			return icon;
+	}
+
+	for (QStringList::ConstIterator it = names.begin();
+	     it != names.end(); it++) {
+		const QString path = QString::fromLatin1(":/icons/status/%1.png").arg(*it);
+		if (QFileInfo(path).exists())
+			icon = QIcon(path);
 		if (!icon.isNull())
 			return icon;
 	}
@@ -1790,7 +1863,11 @@ void ErrorMsg::showMsg(QString msg)
 			  FORMAT_MESSAGE_FROM_SYSTEM,
 			  NULL, err, 0, (LPTSTR) (void *) &buf,
 			  0, NULL) > 0) {
+#ifdef UNICODE
 		QString msg = QString::fromWCharArray(buf);
+#else
+		QString msg = QString::fromLocal8Bit(buf);
+#endif
 		setInformativeText(QString("[%1] %2").arg(err).arg(msg));
 		LocalFree(buf);
 	} else {
@@ -1886,6 +1963,20 @@ bool WpaGui::serviceRunning()
 	return running;
 }
 
+void WpaGui::addToStartup()
+{
+	QSettings settings("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", QSettings::NativeFormat);
+	settings.setValue(QLatin1String("wpa_gui"), QString::fromLatin1("\"%1\" -t -q").arg(qApp->applicationFilePath()));
+	QMessageBox::information(this, QString(), tr("Done"));
+}
+
+void WpaGui::removeFromStartup()
+{
+	QSettings settings("HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", QSettings::NativeFormat);
+	settings.remove(QLatin1String("wpa_gui"));
+	QMessageBox::information(this, QString(), tr("Done"));
+}
+
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 
diff --git a/wpa_supplicant/wpa_gui-qt4/wpagui.h b/wpa_supplicant/wpa_gui-qt4/wpagui.h
index f0a34c9..05b9b11 100644
--- a/wpa_supplicant/wpa_gui-qt4/wpagui.h
+++ b/wpa_supplicant/wpa_gui-qt4/wpagui.h
@@ -25,6 +25,9 @@ public:
 #if !defined(QT_NO_SESSIONMANAGER) && QT_VERSION < 0x050000
 	virtual void saveState(QSessionManager &manager);
 #endif
+#if defined(CONFIG_NATIVE_WINDOWS) && QT_VERSION < 0x050000
+	virtual bool winEventFilter(MSG *message, long *result);
+#endif
 
 	WpaGui *w;
 	int argc;
@@ -111,6 +114,8 @@ public slots:
 #ifdef CONFIG_NATIVE_WINDOWS
 	virtual void startService();
 	virtual void stopService();
+	virtual void addToStartup();
+	virtual void removeFromStartup();
 #endif /* CONFIG_NATIVE_WINDOWS */
 	virtual void addInterface();
 
@@ -166,6 +171,9 @@ private:
 	QAction *fileStopServiceAction;
 
 	bool serviceRunning();
+
+	QAction *fileAddToStartupAction;
+	QAction *fileRemoveFromStartupAction;
 #endif /* CONFIG_NATIVE_WINDOWS */
 
 	QAction *addInterfaceAction;
diff --git a/wpa_supplicant/wpa_supplicant.c b/wpa_supplicant/wpa_supplicant.c
index d37a994..d6f5114 100644
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -15,6 +15,9 @@
 #include <net/if.h>
 #include <fnmatch.h>
 #endif /* CONFIG_MATCH_IFACE */
+#ifdef CONFIG_FORCE_DHCP_RENEW
+#include <iphlpapi.h>
+#endif /* CONFIG_FORCE_DHCP_RENEW */
 
 #include "common.h"
 #include "crypto/random.h"
@@ -926,6 +929,61 @@ void wpa_supplicant_set_state(struct wpa_supplicant *wpa_s,
 		wpa_supplicant_state_txt(wpa_s->wpa_state),
 		wpa_supplicant_state_txt(state));
 
+#ifdef CONFIG_FORCE_DHCP_RENEW
+	/*
+	 * On Win98 we have no correctly assigned IP address after
+	 * connection complete. A call to renew is required, but it doesn't
+	 * happen automatically. We will try to automate this by making
+	 * call to renew here. Also, on Win98 we have empty interface
+	 * names, so let's renew them all.
+	 */
+	if (state == WPA_COMPLETED && old_state != WPA_COMPLETED && LOBYTE(LOWORD(GetVersion())) < 5) {
+		ULONG info_len = 0;
+		if (GetInterfaceInfo(NULL, &info_len) == ERROR_INSUFFICIENT_BUFFER) {
+			PIP_INTERFACE_INFO info = os_malloc(info_len);
+			if (GetInterfaceInfo(info, &info_len) == NO_ERROR) {
+				LONG index;
+				for (index = 0; index < info->NumAdapters; ++index) {
+					size_t i;
+					char name[128];
+					for (i = 0; i < sizeof(name); ++i) {
+						name[i] = *((char*)(&(info->Adapter[index].Name[i])));
+						if (name[i] == '\0')
+							break;
+						else if (!isprint(name[i]))
+							name[i] = '_';
+					}
+
+					if (IpReleaseAddress(&info->Adapter[index]) == NO_ERROR) {
+						wpa_printf(MSG_DEBUG, "DHCP_RENEW: IP release succeeded "
+						           "for Name=%s, Index=%ld",
+						           name, info->Adapter[index].Index);
+					} else {
+						wpa_printf(MSG_DEBUG, "DHCP_RENEW: IP release failed "
+						           "for Name=%s, Index=%ld",
+						           name, info->Adapter[index].Index);
+					}
+
+					if (IpRenewAddress(&info->Adapter[index]) == NO_ERROR) {
+						wpa_printf(MSG_DEBUG, "DHCP_RENEW: IP renew succeeded "
+						           "for Name=%s, Index=%ld",
+						           name, info->Adapter[index].Index);
+					} else {
+						wpa_printf(MSG_DEBUG, "DHCP_RENEW: IP renew failed "
+						           "for Name=%s, Index=%ld",
+						           name, info->Adapter[index].Index);
+					}
+				}
+			} else {
+				wpa_printf(MSG_DEBUG, "DHCP_RENEW: GetInterfaceInfo failed");
+			}
+			os_free(info);
+		} else {
+			wpa_printf(MSG_DEBUG, "DHCP_RENEW: GetInterfaceInfo failed");
+		}
+	}
+#endif /* CONFIG_FORCE_DHCP_RENEW */
+
 	if (state == WPA_COMPLETED &&
 	    os_reltime_initialized(&wpa_s->roam_start)) {
 		os_reltime_age(&wpa_s->roam_start, &wpa_s->roam_time);
-- 
2.30.2

