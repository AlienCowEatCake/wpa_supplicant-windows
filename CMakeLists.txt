cmake_minimum_required(VERSION 3.15)

project(wpa-supplicant VERSION 2.10 LANGUAGES C CXX)

set(BASE_DIR "${CMAKE_CURRENT_LIST_DIR}/wpa_supplicant-2.10")
set(OPENSSL_DIR "${CMAKE_CURRENT_LIST_DIR}/openssl-1.1.1-x86")
set(WPDPACK_DIR "${CMAKE_CURRENT_LIST_DIR}/WpdPack")
link_directories(
    AFTER
    "${OPENSSL_DIR}/lib"
    "${WPDPACK_DIR}/Lib"
    )
include_directories(
    AFTER
    "${OPENSSL_DIR}/include"
    "${WPDPACK_DIR}/Include"
    )

include_directories(
    "${BASE_DIR}/wpa_supplicant"
    "${BASE_DIR}/src"
    "${BASE_DIR}/src/utils"
    )
add_compile_definitions(
    CONFIG_WIN32_DEFAULTS
    EAP_AKA
    EAP_FAST
    EAP_PAX
    CONFIG_NO_SOCKLEN_T_TYPEDEF
    EAP_TLS_OPENSSL
    TLS_DEFAULT_CIPHERS="DEFAULT:!EXP:!LOW"
    EAP_PAX
    EAP_FAST
    EAP_AKA
    CONFIG_SHA256
    )

file(GLOB_RECURSE HEADERS ${BASE_DIR} *.h)
add_library(headers INTERFACE ${HEADERS})

add_executable(
    win_if_list
    "${BASE_DIR}/wpa_supplicant/win_if_list.c"
    )
target_link_libraries(
    win_if_list
    PRIVATE
    wpcap
    )
add_dependencies(win_if_list headers)
set_property(
    TARGET
    win_if_list
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )

add_executable(
    wpa_cli
    "${BASE_DIR}/wpa_supplicant/wpa_cli.c"
    "${BASE_DIR}/src/common/wpa_ctrl.c"
    "${BASE_DIR}/src/utils/wpa_debug.c"
    "${BASE_DIR}/src/utils/common.c"
    "${BASE_DIR}/src/common/cli.c"
    "${BASE_DIR}/src/utils/os_win32.c"
    "${BASE_DIR}/src/utils/eloop_win.c"
    "${BASE_DIR}/src/utils/edit_simple.c"
    )
target_link_libraries(
    wpa_cli
    PRIVATE
    ws2_32
    )
add_dependencies(wpa_cli headers)
set_property(
    TARGET
    wpa_cli
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )

add_executable(
    wpa_passphrase
    "${BASE_DIR}/wpa_supplicant/wpa_passphrase.c"
    "${BASE_DIR}/src/utils/common.c"
    "${BASE_DIR}/src/utils/wpa_debug.c"
    "${BASE_DIR}/src/utils/wpabuf.c"
    "${BASE_DIR}/src/utils/os_win32.c"
    "${BASE_DIR}/src/crypto/crypto_openssl.c"
    )
target_link_libraries(
    wpa_passphrase
    PRIVATE
    ws2_32
    libcrypto
    crypt32
    )
add_dependencies(wpa_passphrase headers)
set_property(
    TARGET
    wpa_passphrase
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )

add_executable(
    wpa_supplicant
    "${BASE_DIR}/wpa_supplicant/config.c"
    "${BASE_DIR}/wpa_supplicant/notify.c"
    "${BASE_DIR}/wpa_supplicant/bss.c"
    "${BASE_DIR}/wpa_supplicant/eap_register.c"
    "${BASE_DIR}/src/utils/common.c"
    "${BASE_DIR}/src/utils/config.c"
    "${BASE_DIR}/src/utils/wpa_debug.c"
    "${BASE_DIR}/src/utils/wpabuf.c"
    "${BASE_DIR}/src/utils/bitfield.c"
    "${BASE_DIR}/src/utils/ip_addr.c"
    "${BASE_DIR}/src/utils/crc32.c"
    "${BASE_DIR}/wpa_supplicant/op_classes.c"
    "${BASE_DIR}/wpa_supplicant/rrm.c"
    "${BASE_DIR}/wpa_supplicant/twt.c"
    "${BASE_DIR}/wpa_supplicant/robust_av.c"
    "${BASE_DIR}/wpa_supplicant/wmm_ac.c"
    "${BASE_DIR}/src/utils/os_win32.c"
    "${BASE_DIR}/src/utils/eloop_win.c"
    "${BASE_DIR}/wpa_supplicant/config_file.c"
    "${BASE_DIR}/src/rsn_supp/wpa.c"
    "${BASE_DIR}/src/rsn_supp/preauth.c"
    "${BASE_DIR}/src/rsn_supp/pmksa_cache.c"
    "${BASE_DIR}/src/rsn_supp/wpa_ie.c"
    "${BASE_DIR}/src/common/wpa_common.c"
    "${BASE_DIR}/src/drivers/driver_ndis.c"
    "${BASE_DIR}/src/drivers/driver_ndis_.c"
    "${BASE_DIR}/src/l2_packet/l2_packet_winpcap.c"
    "${BASE_DIR}/src/eap_peer/eap_tls.c"
    "${BASE_DIR}/src/eap_peer/eap_peap.c"
    "${BASE_DIR}/src/eap_common/eap_peap_common.c"
    "${BASE_DIR}/src/eap_peer/eap_ttls.c"
    "${BASE_DIR}/src/eap_peer/eap_md5.c"
    "${BASE_DIR}/src/eap_peer/eap_mschapv2.c"
    "${BASE_DIR}/src/eap_peer/mschapv2.c"
    "${BASE_DIR}/src/eap_peer/eap_gtc.c"
    "${BASE_DIR}/src/eap_peer/eap_otp.c"
    "${BASE_DIR}/src/eap_peer/eap_leap.c"
    "${BASE_DIR}/src/crypto/ms_funcs.c"
    "${BASE_DIR}/src/eap_peer/eap_tls_common.c"
    "${BASE_DIR}/src/crypto/tls_openssl.c"
    "${BASE_DIR}/src/crypto/tls_openssl_ocsp.c"
    "${BASE_DIR}/src/crypto/crypto_openssl.c"
    "${BASE_DIR}/src/crypto/sha1-prf.c"
    "${BASE_DIR}/src/crypto/sha1-tlsprf.c"
    "${BASE_DIR}/wpa_supplicant/ctrl_iface.c"
    "${BASE_DIR}/wpa_supplicant/ctrl_iface_named_pipe.c"
#    "${BASE_DIR}/wpa_supplicant/ctrl_iface_udp.c"
    "${BASE_DIR}/src/utils/base64.c"
    "${BASE_DIR}/src/common/ieee802_11_common.c"
    "${BASE_DIR}/src/common/hw_features_common.c"
    "${BASE_DIR}/src/eap_common/eap_common.c"
    "${BASE_DIR}/src/drivers/driver_common.c"
    "${BASE_DIR}/wpa_supplicant/wpa_supplicant.c"
    "${BASE_DIR}/wpa_supplicant/events.c"
    "${BASE_DIR}/wpa_supplicant/bssid_ignore.c"
    "${BASE_DIR}/wpa_supplicant/wpas_glue.c"
    "${BASE_DIR}/wpa_supplicant/scan.c"
    "${BASE_DIR}/wpa_supplicant/main.c"
    "${BASE_DIR}/src/drivers/drivers.c"
    "${BASE_DIR}/src/drivers/ndis_events.c"
    "${BASE_DIR}/src/eap_peer/eap_pax.c"
    "${BASE_DIR}/src/eap_common/eap_pax_common.c"
    "${BASE_DIR}/src/eap_peer/eap_fast.c"
    "${BASE_DIR}/src/eap_peer/eap_fast_pac.c"
    "${BASE_DIR}/src/eap_common/eap_fast_common.c"
    "${BASE_DIR}/src/eap_peer/eap_aka.c"
    "${BASE_DIR}/src/eap_common/eap_sim_common.c"
    "${BASE_DIR}/src/crypto/sha1-tprf.c"
    "${BASE_DIR}/src/crypto/fips_prf_openssl.c"
    "${BASE_DIR}/src/crypto/aes-omac1.c"
    "${BASE_DIR}/src/eap_common/chap.c"
    "${BASE_DIR}/src/crypto/random.c"
    "${BASE_DIR}/src/crypto/sha256-prf.c"
    "${BASE_DIR}/src/crypto/sha256-tlsprf.c"
    "${BASE_DIR}/src/eap_peer/eap.c"
    "${BASE_DIR}/src/eap_peer/eap_methods.c"
    "${BASE_DIR}/src/eap_peer/eap_tnc.c"
    "${BASE_DIR}/src/eapol_supp/eapol_supp_sm.c"
    "${BASE_DIR}/src/utils/pcsc_funcs.c"
    "${BASE_DIR}/src/eap_peer/tncc.c"
    )
target_link_libraries(
    wpa_supplicant
    PRIVATE
    wbemuuid
    ws2_32
    libcrypto
    packet
    wpcap
    libssl
    crypt32
    )
add_dependencies(wpa_supplicant headers)
set_property(
    TARGET
    wpa_supplicant
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )

add_executable(
    wpasvc
    "${BASE_DIR}/wpa_supplicant/config.c"
    "${BASE_DIR}/wpa_supplicant/notify.c"
    "${BASE_DIR}/wpa_supplicant/bss.c"
    "${BASE_DIR}/wpa_supplicant/eap_register.c"
    "${BASE_DIR}/src/utils/common.c"
    "${BASE_DIR}/src/utils/config.c"
    "${BASE_DIR}/src/utils/wpa_debug.c"
    "${BASE_DIR}/src/utils/wpabuf.c"
    "${BASE_DIR}/src/utils/bitfield.c"
    "${BASE_DIR}/src/utils/ip_addr.c"
    "${BASE_DIR}/src/utils/crc32.c"
    "${BASE_DIR}/wpa_supplicant/op_classes.c"
    "${BASE_DIR}/wpa_supplicant/rrm.c"
    "${BASE_DIR}/wpa_supplicant/twt.c"
    "${BASE_DIR}/wpa_supplicant/robust_av.c"
    "${BASE_DIR}/wpa_supplicant/wmm_ac.c"
    "${BASE_DIR}/src/utils/os_win32.c"
    "${BASE_DIR}/src/utils/eloop_win.c"
    "${BASE_DIR}/wpa_supplicant/config_winreg.c"
    "${BASE_DIR}/src/rsn_supp/wpa.c"
    "${BASE_DIR}/src/rsn_supp/preauth.c"
    "${BASE_DIR}/src/rsn_supp/pmksa_cache.c"
    "${BASE_DIR}/src/rsn_supp/wpa_ie.c"
    "${BASE_DIR}/src/common/wpa_common.c"
    "${BASE_DIR}/src/drivers/driver_ndis.c"
    "${BASE_DIR}/src/drivers/driver_ndis_.c"
    "${BASE_DIR}/src/l2_packet/l2_packet_winpcap.c"
    "${BASE_DIR}/src/eap_peer/eap_tls.c"
    "${BASE_DIR}/src/eap_peer/eap_peap.c"
    "${BASE_DIR}/src/eap_common/eap_peap_common.c"
    "${BASE_DIR}/src/eap_peer/eap_ttls.c"
    "${BASE_DIR}/src/eap_peer/eap_md5.c"
    "${BASE_DIR}/src/eap_peer/eap_mschapv2.c"
    "${BASE_DIR}/src/eap_peer/mschapv2.c"
    "${BASE_DIR}/src/eap_peer/eap_gtc.c"
    "${BASE_DIR}/src/eap_peer/eap_otp.c"
    "${BASE_DIR}/src/eap_peer/eap_leap.c"
    "${BASE_DIR}/src/crypto/ms_funcs.c"
    "${BASE_DIR}/src/eap_peer/eap_tls_common.c"
    "${BASE_DIR}/src/crypto/tls_openssl.c"
    "${BASE_DIR}/src/crypto/tls_openssl_ocsp.c"
    "${BASE_DIR}/src/crypto/crypto_openssl.c"
    "${BASE_DIR}/src/crypto/sha1-prf.c"
    "${BASE_DIR}/src/crypto/sha1-tlsprf.c"
    "${BASE_DIR}/wpa_supplicant/ctrl_iface.c"
    "${BASE_DIR}/wpa_supplicant/ctrl_iface_named_pipe.c"
#    "${BASE_DIR}/wpa_supplicant/ctrl_iface_udp.c"
    "${BASE_DIR}/src/utils/base64.c"
    "${BASE_DIR}/src/common/ieee802_11_common.c"
    "${BASE_DIR}/src/common/hw_features_common.c"
    "${BASE_DIR}/src/eap_common/eap_common.c"
    "${BASE_DIR}/src/drivers/driver_common.c"
    "${BASE_DIR}/wpa_supplicant/wpa_supplicant.c"
    "${BASE_DIR}/wpa_supplicant/events.c"
    "${BASE_DIR}/wpa_supplicant/bssid_ignore.c"
    "${BASE_DIR}/wpa_supplicant/wpas_glue.c"
    "${BASE_DIR}/wpa_supplicant/scan.c"
    "${BASE_DIR}/wpa_supplicant/main_winsvc.c"
    "${BASE_DIR}/src/drivers/drivers.c"
    "${BASE_DIR}/src/drivers/ndis_events.c"
    "${BASE_DIR}/src/eap_peer/eap_pax.c"
    "${BASE_DIR}/src/eap_common/eap_pax_common.c"
    "${BASE_DIR}/src/eap_peer/eap_fast.c"
    "${BASE_DIR}/src/eap_peer/eap_fast_pac.c"
    "${BASE_DIR}/src/eap_common/eap_fast_common.c"
    "${BASE_DIR}/src/eap_peer/eap_aka.c"
    "${BASE_DIR}/src/eap_common/eap_sim_common.c"
    "${BASE_DIR}/src/crypto/sha1-tprf.c"
    "${BASE_DIR}/src/crypto/fips_prf_openssl.c"
    "${BASE_DIR}/src/crypto/aes-omac1.c"
    "${BASE_DIR}/src/eap_common/chap.c"
    "${BASE_DIR}/src/crypto/random.c"
    "${BASE_DIR}/src/crypto/sha256-prf.c"
    "${BASE_DIR}/src/crypto/sha256-tlsprf.c"
    "${BASE_DIR}/src/eap_peer/eap.c"
    "${BASE_DIR}/src/eap_peer/eap_methods.c"
    "${BASE_DIR}/src/eap_peer/eap_tnc.c"
    "${BASE_DIR}/src/eapol_supp/eapol_supp_sm.c"
    "${BASE_DIR}/src/utils/pcsc_funcs.c"
    "${BASE_DIR}/src/eap_peer/tncc.c"
    )
target_link_libraries(
    wpasvc
    PRIVATE
    wbemuuid
    ws2_32
    libcrypto
    packet
    wpcap
    libssl
    crypt32
    )
add_dependencies(wpasvc headers)
set_property(
    TARGET
    wpasvc
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )


set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
find_package(Qt4 4.4.3 REQUIRED QtGui)
add_executable(
    wpa_gui
    WIN32
    "${BASE_DIR}/src/utils/os_win32.c"
    "${BASE_DIR}/src/common/wpa_ctrl.c"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/wpamsg.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/wpagui.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/eventhistory.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/scanresults.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/scanresultsitem.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/signalbar.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/userdatarequest.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/networkconfig.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/addinterface.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/peers.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/stringquery.h"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/main.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/wpagui.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/eventhistory.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/scanresults.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/scanresultsitem.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/signalbar.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/userdatarequest.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/networkconfig.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/addinterface.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/peers.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/stringquery.cpp"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/icons.qrc"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/icons_png.qrc"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/icons_status.qrc"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/wpagui.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/eventhistory.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/scanresults.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/userdatarequest.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/networkconfig.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/peers.ui"
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4/wpa_gui.rc"
    )
target_compile_definitions(
    wpa_gui
    PRIVATE
    CONFIG_CTRL_IFACE
    NOMINMAX
    CONFIG_NATIVE_WINDOWS
    CONFIG_CTRL_IFACE_NAMED_PIPE
    )
target_include_directories(
    wpa_gui
    PRIVATE
    "${BASE_DIR}/wpa_supplicant/wpa_gui-qt4"
    )
target_link_libraries(
    wpa_gui
    PRIVATE
    Qt4::QtGui
    ws2_32
    crypt32
    gdi32
    advapi32
    user32
    winmm
    imm32
    )
set_property(
    TARGET
    wpa_gui
    PROPERTY
    MSVC_RUNTIME_LIBRARY
    "MultiThreaded$<$<CONFIG:Debug>:Debug>"
    )
